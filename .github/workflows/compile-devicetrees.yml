name: Many devicetrees

on:
  workflow_call:
    inputs:
      compiler:
        type: string
        default: "gcc"
      archs:
        required: true
        type: string
      dts_files:
        required: true
        type: string
    outputs:
      fail:
        value: ${{ jobs.build.outputs.fail }}
      warn:
        value: ${{ jobs.build.outputs.warn }}

env:
  run_id: ${{ github.run_id }}

jobs:
  build:
    timeout-minutes: 7200
    runs-on: [self-hosted, repo-only, v2]

    env:
      GCC_VERSION: 15

    outputs:
      fail: ${{ steps.assert.outputs.fail }}
      warn: ${{ steps.assert.outputs.warn }}

    steps:
    - uses: analogdevicesinc/doctools/checkout@action

    - name: Get sources
      run: |
        file=$(echo "${{ github.workflow_ref }}" | cut -d'/' -f3- | cut -d'@' -f1)
        workflow_ref=$(awk '
          $0 ~ "uses:" && $0 ~ job".yml" {
            sub(/^[[:space:]]*uses:[[:space:]]*/, "", $0);
            print $0;
            exit
          }
        ' "$file")
        echo $workflow_ref

        org_repo="$(echo "$workflow_ref" | cut -d'/' -f1-2)"
        ref="$(echo "$workflow_ref" | cut -d'@' -f2)"

        get_file () {
          echo https://raw.githubusercontent.com/$org_repo/$ref/$1
          curl -sL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o $1 \
              https://raw.githubusercontent.com/$org_repo/$ref/$1
        }

        mkdir -p ci
        get_file ci/build.sh
        get_file ci/runner_env.sh

    - name: Prepare env
      run: |
        if [[ "${{ inputs.compiler }}" == "gcc" ]]; then
          echo "CXX=gcc-$GCC_VERSION" >> $GITHUB_ENV
        else
          echo "::error ::Compiler '${{ inputs.compiler }}' is not supported, valid are 'gcc' or 'llvm'."
          exit 1
        fi
        echo "ARCHS=${{ inputs.archs }}" >> $GITHUB_ENV
        echo "DTS_FILES=${{ inputs.dts_files }}" >> $GITHUB_ENV

    - name: Compile many devicetrees
      run: |
        source ./ci/build.sh
        compile_many_devicetrees

    - name: Prepare dist
      run: |
        if [[ -d dist ]]; then
          rm -r dist
        fi
        mkdir -p dist/dtb
        find . -type f -name *.dtb| \
          xargs -I % cp --parents % dist/dtb

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: dist-dtb-${{ env.CXX }}
        path: dist

    - name: Assert
      id: assert
      run: |
        source ./ci/runner_env.sh
        export_labels
