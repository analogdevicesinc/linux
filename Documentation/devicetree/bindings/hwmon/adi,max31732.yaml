# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/hwmon/adi,max31732.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Analog Devices MAX31732 Temperature Sensor

maintainers:
  - Sinan Divarci <Sinan.Divarci@analog.com>

description: |
  The Analog Devices MAX31732 is a local plus four-channel remote temperature
  sensor that exposes two ALARM outputs, programmable limits and calibration
  aids. The driver reports readings through the Linux hwmon subsystem and can
  optionally use the ALARM pins as interrupts.

properties:
  compatible:
    const: adi,max31732

  reg:
    description: I2C address of the device.
    maxItems: 1

  interrupts:
    description: Optional ALARM1/ALARM2 interrupt lines.
    minItems: 1
    maxItems: 2

  interrupt-names:
    description: Names matching the provided interrupts.
    minItems: 1
    maxItems: 2
    items:
      - const: ALARM1
      - const: ALARM2

  adi,alarm1-interrupt-mode:
    type: boolean
    description: Use the ALARM1 output in interrupt (latching) mode.

  adi,alarm2-interrupt-mode:
    type: boolean
    description: Use the ALARM2 output in interrupt (latching) mode.

  adi,alarm1-fault-queue:
    description: Number of consecutive faults required to assert ALARM1.
    enum: [1, 2, 4, 6]
    default: 1

  adi,alarm2-fault-queue:
    description: Number of consecutive faults required to assert ALARM2.
    enum: [1, 2, 4, 6]
    default: 1

  adi,extended-range:
    type: boolean
    description: Enable the device extended range (+64 degC offset) at probe time.

  adi,alarm1-mask:
    description: Bitmask disabling ALARM1 events per channel (bit0 = local channel).
    $ref: /schemas/types.yaml#/definitions/uint32
    minimum: 0
    maximum: 0x1f

  adi,alarm2-mask:
    description: Bitmask disabling ALARM2 events per channel (bit0 = local channel).
    $ref: /schemas/types.yaml#/definitions/uint32
    minimum: 0
    maximum: 0x1f

required:
  - compatible
  - reg

additionalProperties: false

examples:
  - |
    #include <dt-bindings/interrupt-controller/irq.h>
    #include <dt-bindings/gpio/gpio.h>

    i2c {
        #address-cells = <1>;
        #size-cells = <0>;

        sensor@1c {
            compatible = "adi,max31732";
            reg = <0x1c>;
            interrupt-parent = <&gpio>;
            interrupts = <17 IRQ_TYPE_EDGE_FALLING>, <27 IRQ_TYPE_EDGE_FALLING>;
            interrupt-names = "ALARM1", "ALARM2";
            adi,alarm1-interrupt-mode;
            adi,alarm1-fault-queue = <4>;
            adi,alarm2-fault-queue = <2>;
            adi,extended-range;
            adi,alarm1-mask = <0x08>;
            adi,alarm2-mask = <0x10>;
        };
    };
