# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/staging/display/amd,mmi-dptx.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: AMD Multimedia Integrated Display Port Transmitter.

description:
  The AMD Multimedia Integrated DisplayPort Tx subsystem block implements the
  DisplayPort transmitter and outputs video data using DisplayPort protocol.

maintainers:
  - Vishal Sagar <vishal.sagar@amd.com>

properties:
  compatible:
    const: amd,mmi-dptx-1.0

  reg:
    items:
      - description: dptx registers
      - description: hdcp registers

  reg-names:
    items:
      - const: dp
      - const: hdcp

  interrupts:
    items:
      - description: DP Tx event
      - description: HDCP event

  interrupt-names:
    items:
      - const: dptx
      - const: hdcp

  clocks:
    items:
      - description: APB Clock
      - description: Video pixel clock
      - description: Audio i2s clock

  clock-names:
    items:
      - const: apb_clk
      - const: pixel_clk
      - const: i2s_clk

  xlnx,hdcp-1x:
    type: boolean
    description: boolean present when HDCP version is 1.3.

  xlnx,hdcp-2x:
    type: boolean
    description: boolean present when HDCP version is 2.3.

  xlnx,dptx-streams:
    description: number of input streams to DP Tx
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [1, 2, 4]

  xlnx,dptx-pixel-mode:
    description: Pixels per clock
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [1, 2, 4]

  xlnx,dp-lanes:
    description: Number of lanes for DP
    $ref: /schemas/types.yaml#/definitions/uint32
    enum: [1, 2, 4]

  ports:
    $ref: /schemas/graph.yaml#/properties/ports
    description:
      Connections to the Display Controller(DC) and DP monitor. Each port
      shall have a single endpoint. Initial 4 are gets input from DC.
      Next 1 is output port connected to DP monitor.

    properties:
      "#address-cells":
        const: 1

      "#size-cells":
        const: 0

    patternProperties:
      "^port@([0-3])$":
        type: object
        description:
          Input port number, describing input coming from DC.
          port 0 is blended video output from DisplayPort Tx
          port 1-3 are connected in bypass / MST mode only.

        properties:
          reg:
            enum: [0, 1, 2, 3]

          endpoint:
            type: object

            properties:
              remote-endpoint: true

            required:
              - remote-endpoint

            additionalProperties: false

        required:
          - reg
          - endpoint

        additionalProperties: false

    required:
      - "#address-cells"
      - "#size-cells"
      - port@0

required:
  - compatible
  - reg
  - reg-names
  - interrupts
  - interrupt-names
  - ports

additionalProperties: false

examples:
  - |
    axi {
        #address-cells = <2>;
        #size-cells = <2>;

        mmi_dptx@ede00000 {
            compatible = "amd,mmi-dptx-1.0";
            reg = <0x0 0xede00000 0x0 0x40000>, <0x0 0xedeb0000 0x0 0x100>;
            reg-names = "dp", "hdcp";
            interrupts = <0 178 4>, <0 167 4>;
            interrupt-names = "dptx", "hdcp";
            interrupt-parent = <&imux>;
            clocks = <&mmi_apb_clk>, <&mmi_pixel_clk>, <&mmi_i2s_clk>;
            clock-names = "apb_clk", "pixel_clk", "i2s_clk";

            xlnx,dp-lanes = <2>;

            ports {
                #address-cells = <1>;
                #size-cells = <0>;

                port@0 {
                    reg = <0>;
                    dptx_in_0: endpoint {
                        remote-endpoint = <&dc_out_0>;
                    };
                };
                port@1 {
                    reg = <1>;
                    dptx_in_1: endpoint {
                        remote-endpoint = <&dc_out_1>;
                    };
                };
                port@2 {
                    reg = <2>;
                    dptx_in_2: endpoint {
                        remote-endpoint = <&dc_out_2>;
                    };
                };
                port@3 {
                    reg = <3>;
                    dptx_in_3: endpoint {
                        remote-endpoint = <&dc_out_3>;
                    };
                };
            };
        };
    };
...
