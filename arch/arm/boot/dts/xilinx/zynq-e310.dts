// SPDX-License-Identifier: GPL-2.0
/*
 * Ettus Research E310
 * Link: https://www.ettus.com/all-products/e310/
 *
 * hdl_project: <usrpe31x>
 * board_revision: <>
 *
 * Copyright (C) 2018-2019 Analog Devices Inc.
 */
/dts-v1/;
#include "zynq.dtsi"
#include <dt-bindings/input/input.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/interrupt-controller/irq.h>

#define AD9361_EXT_BAND_CTL_SHORTHANDS
#include <dt-bindings/iio/adc/adi,ad9361.h>

/ {
	model = "Ettus Research E310 IIO (Z7020/AD9361)";
	memory {
		device_type = "memory";
		reg = <0x00000000 0x40000000>;
	};

	aliases: aliases {
		ethernet0 = &gem0;
		serial0 = &uart0;
		serial1 = &uart1;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	clocks {
		xo_40mhz_fixed_clk: clock@0 {
			#clock-cells = <0>;
			compatible = "adjustable-clock";
			clock-frequency = <40000000>;
			clock-accuracy = <200000>; /* 200 ppm (ppb) */
			clock-output-names = "ad9361_ext_refclk";
		};

		usb_ulpi_fixed_clk: clock@2 {
			#clock-cells = <0>;
			compatible = "fixed-clock";
			clock-frequency = <24000000>;
			clock-output-names = "24MHz";
		};
	};

	gpio-keys {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "gpio-keys";

		power {
			interrupt-parent = <&gpio0>;
			label = "Power";
			gpios = <&gpio0 60 GPIO_ACTIVE_LOW>;

			linux,code = <KEY_POWER>;
			gpio-key,wakeup;
		};
	};
};

&uart0 {
	status = "okay";
};

&uart1 {
	status = "okay";
};

&gem0 {
	phy-handle = <&phy0>;
	phy-mode = "rgmii-id";

	phy0: phy@0 {
		device_type = "ethernet-phy";
		reg = <0x0>;
	};
};

&usb0 {
	xlnx,phy-reset-gpio = <&gpio0 7 0>;
};

&sdhci0 {
	status = "okay";
	disable-wp;
};

&i2c0 {
	status = "okay";
	clock-frequency = <400000>;

	ds1339: rtc@68 {
		compatible = "dallas,ds1339";
		reg = <0x68>;
	};

	adt7408: temp@19 {
		compatible = "jc42";
		reg = <0x19>;
	};

	bmp180: pressure@77 {
		compatible = "bmp180";
		reg = <0x77>;
	};
};

/ {
	fpga_axi: fpga-axi@0 {
		compatible = "simple-bus";
		#address-cells = <0x1>;
		#size-cells = <0x1>;
		ranges;

		axi_gpio: axi_gpio@41600000 {
			#gpio-cells = <2>;
			compatible = "xlnx,xps-gpio-1.00.a";
			gpio-controller ;
			reg = <0x41600000 0x10000>;
			interrupt-parent = <&intc>;

			#address-cells = <1>;
			#size-cells = <0>;

		};

		rx_dma: dma@7c400000 {
			compatible = "adi,axi-dmac-1.00.a";
			reg = <0x7c400000 0x1000>;
			#dma-cells = <1>;
			interrupts = <0 57 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&clkc 16>;

			adi,channels {
				#size-cells = <0>;
				#address-cells = <1>;

				dma-channel@0 {
					reg = <0>;
					adi,source-bus-width = <64>;
					adi,source-bus-type = <2>;
					adi,destination-bus-width = <64>;
					adi,destination-bus-type = <0>;
				};
			};
		};

		tx_dma: dma@7c420000 {
			compatible = "adi,axi-dmac-1.00.a";
			reg = <0x7c420000 0x1000>;
			#dma-cells = <1>;
			interrupts = <0 56 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&clkc 16>;

			adi,channels {
				#size-cells = <0>;
				#address-cells = <1>;

				dma-channel@0 {
					reg = <0>;
					adi,source-bus-width = <64>;
					adi,source-bus-type = <0>;
					adi,destination-bus-width = <64>;
					adi,destination-bus-type = <2>;
				};
			};
		};

		cf_ad9361_adc_core_0: cf-ad9361-lpc@79020000 {
			compatible = "adi,axi-ad9361-6.00.a";
			reg = <0x79020000 0x6000>;
			dmas = <&rx_dma 0>;
			dma-names = "rx";
			spibus-connected = <&adc0_ad9361>;
		};

		cf_ad9361_dac_core_0: cf-ad9361-dds-core-lpc@79024000 {
			compatible = "adi,axi-ad9361-dds-6.00.a";
			reg = <0x79024000 0x1000>;
			clocks = <&adc0_ad9361 13>;
			clock-names = "sampl_clk";
			dmas = <&tx_dma 0>;
			dma-names = "tx";
		};
	};
};

&gpio0 {
	txrx1_tx_led {
		gpio-hog;
		gpios = <109 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "txrx1_tx_led";
	};

	txrx2_tx_led {
		gpio-hog;
		gpios = <107 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "txrx2_tx_led";
	};

	rx1_rx_led {
		gpio-hog;
		gpios = <105 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "rx1_rx_led";
	};

	rx2_rx_led {
		gpio-hog;
		gpios = <104 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "rx2_rx_led";
	};
};

&spi0 {
	status = "okay";

	adc0_ad9361: ad9361-phy@0 {
		#address-cells = <1>;
		#size-cells = <0>;
		#clock-cells = <1>;
		compatible = "adi,ad9361";

		/* SPI Setup */
		reg = <0>;
		spi-cpha;
		spi-max-frequency = <10000000>;

		/* Clocks */
		clocks = <&xo_40mhz_fixed_clk 0>;
		clock-names = "ad9361_ext_refclk";
		clock-output-names = "rx_sampl_clk", "tx_sampl_clk";

		/* Digital Interface Control */

		 /* adi,digital-interface-tune-skip-mode:
		  * 0 = TUNE RX&TX
		  * 1 = SKIP TX
		  * 2 = SKIP ALL
		  */
		adi,digital-interface-tune-skip-mode = <0>;

		adi,pp-tx-swap-enable;
		adi,pp-rx-swap-enable;
		adi,rx-frame-pulse-mode-enable;
		adi,rx-data-delay = <4>;
		adi,tx-fb-clock-delay = <7>;

		/* CMOS */
		adi,full-port-enable;

		adi,xo-disable-use-ext-refclk-enable;

		/* Mode Setup */

		adi,2rx-2tx-mode-enable;

		/* ENSM Mode */
		adi,frequency-division-duplex-mode-enable;
		//adi,ensm-enable-pin-pulse-mode-enable;
		//adi,ensm-enable-txnrx-control-enable;


		/* adi,rx-rf-port-input-select:
		 * 0 = (RX1A_N &  RX1A_P) and (RX2A_N & RX2A_P) enabled; balanced
		 * 1 = (RX1B_N &  RX1B_P) and (RX2B_N & RX2B_P) enabled; balanced
		 * 2 = (RX1C_N &  RX1C_P) and (RX2C_N & RX2C_P) enabled; balanced
		 *
		 * 3 = RX1A_N and RX2A_N enabled; unbalanced
		 * 4 = RX1A_P and RX2A_P enabled; unbalanced
		 * 5 = RX1B_N and RX2B_N enabled; unbalanced
		 * 6 = RX1B_P and RX2B_P enabled; unbalanced
		 * 7 = RX1C_N and RX2C_N enabled; unbalanced
		 * 8 = RX1C_P and RX2C_P enabled; unbalanced
		 */

		adi,rx-rf-port-input-select = <0>; /* (RX1A_N &  RX1A_P) and (RX2A_N & RX2A_P) enabled; balanced */

		/* adi,tx-rf-port-input-select:
		 * 0	TX1A, TX2A
		 * 1	TX1B, TX2B
		 */

		adi,tx-rf-port-input-select = <0>; /* TX1A, TX2A */
		//adi,update-tx-gain-in-alert-enable;
		adi,tx-attenuation-mdB = <10000>;
		adi,tx-lo-powerdown-managed-enable;

		adi,rf-rx-bandwidth-hz = <18000000>;
		adi,rf-tx-bandwidth-hz = <18000000>;
		adi,rx-synthesizer-frequency-hz = /bits/ 64 <2400000000>;
		adi,tx-synthesizer-frequency-hz = /bits/ 64 <2450000000>;

		/*				BBPLL     ADC        R2CLK     R1CLK    CLKRF    RSAMPL  */
		adi,rx-path-clock-frequencies = <983040000 245760000 122880000 61440000 30720000 30720000>;
		/*				BBPLL     DAC        T2CLK     T1CLK    CLKTF    TSAMPL  */
		adi,tx-path-clock-frequencies = <983040000 122880000 122880000 61440000 30720000 30720000>;

		/* Gain Control */

		/* adi,gc-rx[1|2]-mode:
		 * 0 = RF_GAIN_MGC
		 * 1 = RF_GAIN_FASTATTACK_AGC
		 * 2 = RF_GAIN_SLOWATTACK_AGC
		 * 3 = RF_GAIN_HYBRID_AGC
		 */

		adi,gc-rx1-mode = <2>;
		adi,gc-rx2-mode = <2>;
		adi,gc-adc-ovr-sample-size = <4>; /* sum 4 samples */
		adi,gc-adc-small-overload-thresh = <47>; /* sum of squares */
		adi,gc-adc-large-overload-thresh = <58>; /* sum of squares */
		adi,gc-lmt-overload-high-thresh = <800>; /* mV */
		adi,gc-lmt-overload-low-thresh = <704>; /* mV */
		adi,gc-dec-pow-measurement-duration = <8192>; /* 0..524288 Samples */
		adi,gc-low-power-thresh = <24>; /* 0..-64 dBFS vals are set pos */
		//adi,gc-dig-gain-enable;
		//adi,gc-max-dig-gain = <15>;

		/* Manual Gain Control Setup */

		//adi,mgc-rx1-ctrl-inp-enable; /* uncomment to use ctrl inputs */
		//adi,mgc-rx2-ctrl-inp-enable; /* uncomment to use ctrl inputs */
		adi,mgc-inc-gain-step = <2>;
		adi,mgc-dec-gain-step = <2>;

		/* adi,mgc-split-table-ctrl-inp-gain-mode:
		 * (relevant if adi,split-gain-table-mode-enable is set)
		 * 0 = AGC determine this
		 * 1 = only in LPF
		 * 2 = only in LMT
		 */

		adi,mgc-split-table-ctrl-inp-gain-mode = <0>;

		/* Automatic Gain Control Setup */

		adi,agc-attack-delay-extra-margin-us= <1>; /* us */
		adi,agc-outer-thresh-high = <5>; /* -dBFS */
		adi,agc-outer-thresh-high-dec-steps = <2>; /* 0..15 */
		adi,agc-inner-thresh-high = <10>; /* -dBFS */
		adi,agc-inner-thresh-high-dec-steps = <1>; /* 0..7 */
		adi,agc-inner-thresh-low = <12>; /* -dBFS */
		adi,agc-inner-thresh-low-inc-steps = <1>; /* 0..7 */
		adi,agc-outer-thresh-low = <18>; /* -dBFS */
		adi,agc-outer-thresh-low-inc-steps = <2>; /* 0..15 */

		adi,agc-adc-small-overload-exceed-counter = <10>; /* 0..15 */
		adi,agc-adc-large-overload-exceed-counter = <10>; /* 0..15 */
		adi,agc-adc-large-overload-inc-steps = <2>; /* 0..15 */
		//adi,agc-adc-lmt-small-overload-prevent-gain-inc-enable;
		adi,agc-lmt-overload-large-exceed-counter = <10>; /* 0..15 */
		adi,agc-lmt-overload-small-exceed-counter = <10>; /* 0..15 */
		adi,agc-lmt-overload-large-inc-steps = <2>; /* 0..7 */
		//adi,agc-dig-saturation-exceed-counter = <3>; /* 0..15 */
		//adi,agc-dig-gain-step-size = <4>; /* 1..8 */

		//adi,agc-sync-for-gain-counter-enable;
		adi,agc-gain-update-interval-us = <1000>;  /* 1ms */
		//adi,agc-immed-gain-change-if-large-adc-overload-enable;
		//adi,agc-immed-gain-change-if-large-lmt-overload-enable;

		/* Fast AGC */

		adi,fagc-dec-pow-measurement-duration = <64>; /* 64 Samples */
		//adi,fagc-allow-agc-gain-increase-enable;
		adi,fagc-lp-thresh-increment-steps = <1>;
		adi,fagc-lp-thresh-increment-time = <5>;

		adi,fagc-energy-lost-stronger-sig-gain-lock-exit-cnt = <8>;
		adi,fagc-final-overrange-count = <3>;
		//adi,fagc-gain-increase-after-gain-lock-enable;
		adi,fagc-gain-index-type-after-exit-rx-mode = <0>;
		adi,fagc-lmt-final-settling-steps = <1>;
		adi,fagc-lock-level = <10>;
		adi,fagc-lock-level-gain-increase-upper-limit = <5>;
		adi,fagc-lock-level-lmt-gain-increase-enable;

		adi,fagc-lpf-final-settling-steps = <1>;
		adi,fagc-optimized-gain-offset = <5>;
		adi,fagc-power-measurement-duration-in-state5 = <64>;
		adi,fagc-rst-gla-engergy-lost-goto-optim-gain-enable;
		adi,fagc-rst-gla-engergy-lost-sig-thresh-below-ll = <10>;
		adi,fagc-rst-gla-engergy-lost-sig-thresh-exceeded-enable;
		adi,fagc-rst-gla-if-en-agc-pulled-high-mode = <0>;
		adi,fagc-rst-gla-large-adc-overload-enable;
		adi,fagc-rst-gla-large-lmt-overload-enable;
		adi,fagc-rst-gla-stronger-sig-thresh-above-ll = <10>;
		adi,fagc-rst-gla-stronger-sig-thresh-exceeded-enable;
		adi,fagc-state-wait-time-ns = <260>;
		adi,fagc-use-last-lock-level-for-set-gain-enable;

		/* RSSI */

		/* adi,rssi-restart-mode:
		 * 0 = AGC_IN_FAST_ATTACK_MODE_LOCKS_THE_GAIN,
		 * 1 = EN_AGC_PIN_IS_PULLED_HIGH,
		 * 2 = ENTERS_RX_MODE,
		 * 3 = GAIN_CHANGE_OCCURS,
		 * 4 = SPI_WRITE_TO_REGISTER,
		 * 5 = GAIN_CHANGE_OCCURS_OR_EN_AGC_PIN_PULLED_HIGH,
		 */
		adi,rssi-restart-mode = <3>;
		//adi,rssi-unit-is-rx-samples-enable;
		adi,rssi-delay = <1>; /* 1us */
		adi,rssi-wait = <1>; /* 1us */
		adi,rssi-duration = <1000>; /* 1ms */

		/* Control Outputs */
		adi,ctrl-outs-index = <0>;
		adi,ctrl-outs-enable-mask = <0xFF>;

		/* AuxADC Temp Sense Control */

		adi,temp-sense-measurement-interval-ms = <1000>;
		adi,temp-sense-offset-signed = <0xCE>;
		adi,temp-sense-periodic-measurement-enable;

		/* AuxDAC Control */

		adi,aux-dac-manual-mode-enable;

		adi,aux-dac1-default-value-mV = <0>;
		//adi,aux-dac1-active-in-rx-enable;
		//adi,aux-dac1-active-in-tx-enable;
		//adi,aux-dac1-active-in-alert-enable;
		adi,aux-dac1-rx-delay-us = <0>;
		adi,aux-dac1-tx-delay-us = <0>;

		adi,aux-dac2-default-value-mV = <0>;
		//adi,aux-dac2-active-in-rx-enable;
		//adi,aux-dac2-active-in-tx-enable;
		//adi,aux-dac2-active-in-alert-enable;
		adi,aux-dac2-rx-delay-us = <0>;
		adi,aux-dac2-tx-delay-us = <0>;

		/* Control GPIOs */

		en_agc-gpios = <&gpio0 98 0>;
		sync-gpios = <&gpio0 99 0>;
		reset-gpios = <&gpio0 100 0>;
		enable-gpios = <&gpio0 101 0>;
		txnrx-gpios = <&gpio0 102 0>;

		/* Filter Bank Control */

		adi,rx-rf-port-input-select-lock-enable;
		adi,tx-rf-port-input-select-lock-enable;

		adi,band-ctl-0-gpio = <&gpio0 115 GPIO_ACTIVE_HIGH>; /* txrx2_antsel_v1 */
		adi,band-ctl-1-gpio = <&gpio0 114 GPIO_ACTIVE_HIGH>; /* txrx2_antsel_v2 */
		adi,band-ctl-2-gpio = <&gpio0 117 GPIO_ACTIVE_HIGH>; /* txrx1_antsel_v1 */
		adi,band-ctl-3-gpio = <&gpio0 116 GPIO_ACTIVE_HIGH>; /* txrx1_antsel_v2 */

		adi,band-ctl-4-gpio = <&gpio0 111 GPIO_ACTIVE_HIGH>; /* rx2_antsel_v1 */
		adi,band-ctl-5-gpio = <&gpio0 110 GPIO_ACTIVE_HIGH>; /* rx2_antsel_v2 */
		adi,band-ctl-6-gpio = <&gpio0 113 GPIO_ACTIVE_HIGH>; /* rx1_antsel_v1 */
		adi,band-ctl-7-gpio = <&gpio0 112 GPIO_ACTIVE_HIGH>; /* rx1_antsel_v2 */

		adi,band-ctl-8-gpio = <&gpio0 80 GPIO_ACTIVE_HIGH>; /* tx_bandsel_[2] */
		adi,band-ctl-9-gpio = <&gpio0 79 GPIO_ACTIVE_HIGH>; /* tx_bandsel_[1] */
		adi,band-ctl-10-gpio = <&gpio0 78 GPIO_ACTIVE_HIGH>; /* tx_bandsel_[0] */

		adi,band-ctl-11-gpio = <&gpio0 68 GPIO_ACTIVE_HIGH>; /* rx_bandsel_2_[2] */
		adi,band-ctl-12-gpio = <&gpio0 67 GPIO_ACTIVE_HIGH>; /* rx_bandsel_2_[1] */
		adi,band-ctl-13-gpio = <&gpio0 66 GPIO_ACTIVE_HIGH>; /* rx_bandsel_2_[0] */
		adi,band-ctl-14-gpio = <&gpio0 65 GPIO_ACTIVE_HIGH>; /* rx_bandsel_2b_[1] */
		adi,band-ctl-15-gpio = <&gpio0 64 GPIO_ACTIVE_HIGH>; /* rx_bandsel_2b_[0] */
		adi,band-ctl-16-gpio = <&gpio0 63 GPIO_ACTIVE_HIGH>; /* rx_bandsel_2c_[1] */
		adi,band-ctl-17-gpio = <&gpio0 62 GPIO_ACTIVE_HIGH>; /* rx_bandsel_2c_[0] */
		adi,band-ctl-18-gpio = <&gpio0 76 GPIO_ACTIVE_HIGH>; /* rx_bandsel_1_[2] */
		adi,band-ctl-19-gpio = <&gpio0 75 GPIO_ACTIVE_HIGH>; /* rx_bandsel_1_[1] */
		adi,band-ctl-20-gpio = <&gpio0 74 GPIO_ACTIVE_HIGH>; /* rx_bandsel_1_[0] */
		adi,band-ctl-21-gpio = <&gpio0 73 GPIO_ACTIVE_HIGH>; /* rx_bandsel_1b_[1] */
		adi,band-ctl-22-gpio = <&gpio0 72 GPIO_ACTIVE_HIGH>; /* rx_bandsel_1b_[0] */
		adi,band-ctl-23-gpio = <&gpio0 71 GPIO_ACTIVE_HIGH>; /* rx_bandsel_1c_[1] */
		adi,band-ctl-24-gpio = <&gpio0 70 GPIO_ACTIVE_HIGH>; /* rx_bandsel_1c_[0] */

		adi,band-ctl-25-gpio = <&gpio0 84 GPIO_ACTIVE_HIGH>; /* tx_enable_2a */
		adi,band-ctl-26-gpio = <&gpio0 85 GPIO_ACTIVE_HIGH>; /* tx_enable_1a */
		adi,band-ctl-27-gpio = <&gpio0 82 GPIO_ACTIVE_HIGH>; /* tx_enable_2b */
		adi,band-ctl-28-gpio = <&gpio0 83 GPIO_ACTIVE_HIGH>; /* tx_enable_1b */


		e310_tx_amp_disable: e310_tx_amp_disable {
			adi,gpio-settings = <_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 0 0 0 0>;
		};

		e310_tx_amp_a_enable: e310_tx_amp_a_enable {
			adi,gpio-settings = <_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 1 1 0 0>;
		};

		e310_tx_amp_b_enable: e310_tx_amp_b_enable {
			adi,gpio-settings = <_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 0 0 1 1>;
		};

		ad9361_rx_ant_port_a: ad9361_rx_ant_port_a {
			adi,rx-rf-port-input-select = <0>; /* (RX1A_N &  RX1A_P) and (RX2A_N & RX2A_P) enabled; balanced */
		};

		ad9361_rx_ant_port_b: ad9361_rx_ant_port_b {
			adi,rx-rf-port-input-select = <1>; /* (RX1B_N &  RX1B_P) and (RX2B_N & RX2B_P) enabled; balanced */
		};

		ad9361_rx_ant_port_c: ad9361_rx_ant_port_c {
			adi,rx-rf-port-input-select = <2>; /* (RX1C_N &  RX1C_P) and (RX2C_N & RX2C_P) enabled; balanced */
		};

		ad9361_tx_ant_port_a: ad9361_tx_ant_port_a {
			adi,tx-rf-port-input-select = <0>; /* TX1A, TX2A */
		};

		ad9361_tx_ant_port_b: ad9361_tx_ant_port_b {
			adi,tx-rf-port-input-select = <1>; /* TX1B, TX2B */
		};

		/* Init / Exit */

		adi_ext_band_ctl_init {
			adi,gpio-settings = <1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
		};

		adi_ext_band_ctl_uninit {
			adi,gpio-settings = <1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0>;
		};

		/* Receive Side */

		adi_rx_band_setting_0 {
			adi,lo-freq-min = /bits/ 64 <0>;
			adi,lo-freq-max = /bits/ 64 <450000000>;

			adi,gpio-settings = <_ _ _ _ 0 1 0 1 _ _ _ 1 0 1 _ _ 0 1 1 0 0 _ _ 1 0 _ _ _ _>;
			adi,band-ctl-post = <&ad9361_rx_ant_port_c 0>;
		};

		adi_rx_band_setting_1 {
			adi,lo-freq-min = /bits/ 64 <450000000>;
			adi,lo-freq-max = /bits/ 64 <700000000>;

			adi,gpio-settings = <_ _ _ _ 0 1 0 1 _ _ _ 0 1 1 _ _ 1 1 0 1 0 _ _ 1 1 _ _ _ _>;
			adi,band-ctl-post = <&ad9361_rx_ant_port_c 0>;
		};

		adi_rx_band_setting_2 {
			adi,lo-freq-min = /bits/ 64 <700000000>;
			adi,lo-freq-max = /bits/ 64 <1200000000>;

			adi,gpio-settings = <_ _ _ _ 0 1 0 1 _ _ _ 0 0 1 _ _ 1 0 0 0 0 _ _ 0 1 _ _ _ _>;
			adi,band-ctl-post = <&ad9361_rx_ant_port_c 0>;
		};

		adi_rx_band_setting_3 {
			adi,lo-freq-min = /bits/ 64 <1200000000>;
			adi,lo-freq-max = /bits/ 64 <1800000000>;

			adi,gpio-settings = <_ _ _ _ 0 1 0 1 _ _ _ 0 0 0 0 1 _ _ 0 0 1 1 0 _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_rx_ant_port_b 0>;
		};


		adi_rx_band_setting_4 {
			adi,lo-freq-min = /bits/ 64 <1800000000>;
			adi,lo-freq-max = /bits/ 64 <2350000000>;

			adi,gpio-settings = <_ _ _ _ 0 1 0 1 _ _ _ 0 1 0 1 1 _ _ 0 1 1 1 1 _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_rx_ant_port_b 0>;
		};

		adi_rx_band_setting_5 {
			adi,lo-freq-min = /bits/ 64 <2350000000>;
			adi,lo-freq-max = /bits/ 64 <2600000000>;

			adi,gpio-settings = <_ _ _ _ 0 1 0 1 _ _ _ 1 0 0 1 0 _ _ 1 0 1 0 1 _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_rx_ant_port_b 0>;

		};

		adi_rx_band_setting_6 {
			adi,lo-freq-min = /bits/ 64 <2600000000>;
			adi,lo-freq-max = /bits/ 64 <6000000001>;

			adi,gpio-settings = <_ _ _ _ 1 0 1 0 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_rx_ant_port_a 0>;
		};


		/* Transmit Side */

		adi_tx_band_setting_0 {
			adi,lo-freq-min = /bits/ 64 <0>;
			adi,lo-freq-max = /bits/ 64 <117700000>;

			adi,band-ctl-pre = <&e310_tx_amp_disable 0>;
			adi,gpio-settings = <1 0 0 1 _ _ _ _ 1 1 1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_tx_ant_port_b 0 &e310_tx_amp_b_enable 0>;
		};

		adi_tx_band_setting_1 {
			adi,lo-freq-min = /bits/ 64 <117700000>;
			adi,lo-freq-max = /bits/ 64 <178200000>;

			adi,band-ctl-pre = <&e310_tx_amp_disable 0>;
			adi,gpio-settings = <1 0 0 1 _ _ _ _ 1 1 0 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_tx_ant_port_b 0 &e310_tx_amp_b_enable 0>;
		};

		adi_tx_band_setting_2 {
			adi,lo-freq-min = /bits/ 64 <178200000>;
			adi,lo-freq-max = /bits/ 64 <284300000>;

			adi,band-ctl-pre = <&e310_tx_amp_disable 0>;
			adi,gpio-settings = <1 0 0 1 _ _ _ _ 1 0 1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_tx_ant_port_b 0 &e310_tx_amp_b_enable 0>;
		};

		adi_tx_band_setting_3 {
			adi,lo-freq-min = /bits/ 64 <284300000>;
			adi,lo-freq-max = /bits/ 64 <453700000>;

			adi,band-ctl-pre = <&e310_tx_amp_disable 0>;
			adi,gpio-settings = <1 0 0 1 _ _ _ _ 1 0 0 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_tx_ant_port_b 0 &e310_tx_amp_b_enable 0>;
		};

		adi_tx_band_setting_4 {
			adi,lo-freq-min = /bits/ 64 <453700000>;
			adi,lo-freq-max = /bits/ 64 <723800000>;

			adi,band-ctl-pre = <&e310_tx_amp_disable 0>;
			adi,gpio-settings = <1 0 0 1 _ _ _ _ 0 1 1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_tx_ant_port_b 0 &e310_tx_amp_b_enable 0>;
		};

		adi_tx_band_setting_5 {
			adi,lo-freq-min = /bits/ 64 <723800000>;
			adi,lo-freq-max = /bits/ 64 <1154900000>;

			adi,band-ctl-pre = <&e310_tx_amp_disable 0>;
			adi,gpio-settings = <1 0 0 1 _ _ _ _ 0 1 0 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_tx_ant_port_b 0 &e310_tx_amp_b_enable 0>;
		};

		adi_tx_band_setting_6 {
			adi,lo-freq-min = /bits/ 64 <1154900000>;
			adi,lo-freq-max = /bits/ 64 <1842600000>;

			adi,band-ctl-pre = <&e310_tx_amp_disable 0>;
			adi,gpio-settings = <1 0 0 1 _ _ _ _ 0 0 1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_tx_ant_port_b 0 &e310_tx_amp_b_enable 0>;
		};

		adi_tx_band_setting_7 {
			adi,lo-freq-min = /bits/ 64 <1842600000>;
			adi,lo-freq-max = /bits/ 64 <2940000000>;

			adi,band-ctl-pre = <&e310_tx_amp_disable 0>;
			adi,gpio-settings = <1 0 0 1 _ _ _ _ 0 0 0 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_tx_ant_port_b 0 &e310_tx_amp_b_enable 0>;
		};

		adi_tx_band_setting_8 {
			adi,lo-freq-min = /bits/ 64 <2940000000>;
			adi,lo-freq-max = /bits/ 64 <6000000001>;

			adi,band-ctl-pre = <&e310_tx_amp_disable 0>;
			adi,gpio-settings = <1 1 1 1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _>;
			adi,band-ctl-post = <&ad9361_tx_ant_port_a 0 &e310_tx_amp_a_enable 0>;

		};
	};

// 	ad5662@1 {
// 		compatible = "adi,ad5662";
// 		reg = <1>;
// 		spi-max-frequency = <1000000>;
// 	};
};

&spi1 { /* AVR SPI */
	/* echo -ne "\x01\x00\x00\x00\x00\x00\x7A\x00" > /dev/spidev32765.0 */
	status = "okay";

	spidev0: spidev@0 {
		compatible = "rohm,dh2228fv";
		reg = <0>;
		spi-max-frequency = <1000000>;
	};
};

/*
	txrx1_antsel_v1		63	117
	txrx1_antsel_v2		62	116
	txrx2_antsel_v1		61	115
	txrx2_antsel_v2		60	114
	rx1_antsel_v1		59	113
	rx1_antsel_v2		58	112
	rx2_antsel_v1		57	111
	rx2_antsel_v2		56	110
	tx_bandsel_[2]		26	80
	tx_bandsel_[1]		25	79
	tx_bandsel_[0]		24	78
	rx_bandsel_1_[2]	22	76
	rx_bandsel_1_[1]	21	75
	rx_bandsel_1_[0]	20	74
	rx_bandsel_1b_[1]	19	73
	rx_bandsel_1b_[0]	18	72
	rx_bandsel_1c_[1]	17	71
	rx_bandsel_1c_[0]	16	70
	rx_bandsel_2_[2]	14	68
	rx_bandsel_2_[1]	13	67
	rx_bandsel_2_[0]	12	66
	rx_bandsel_2b_[1]	11	65
	rx_bandsel_2b_[0]	10	64
	rx_bandsel_2c_[1]	9	63
	rx_bandsel_2c_[0]	8	62
	tx_enable_1a		31	85
	tx_enable_2a		30	84
	tx_enable_1b		29	83
	tx_enable_2b		28	82

	txrx1_tx_led		55	109
	txrx1_rx_led		54	108
	txrx2_tx_led		53	107
	txrx2_rx_led		52	106
	rx1_rx_led		51	105
	rx2_rx_led		50	104

	avr_irq 		7
	pwr_switch 		6

*/
