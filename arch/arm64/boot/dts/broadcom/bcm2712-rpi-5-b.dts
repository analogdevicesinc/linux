// SPDX-License-Identifier: GPL-2.0
/dts-v1/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/reset/raspberrypi,firmware-reset.h>

#define i2c0 _i2c0
#define i2c3 _i2c3
#define i2c4 _i2c4
#define i2c5 _i2c5
#define i2c6 _i2c6
#define i2c8 _i2c8
#define i2s _i2s
#define pwm0 _pwm0
#define pwm1 _pwm1
#define spi0 _spi0
#define spi3 _spi3
#define spi4 _spi4
#define spi5 _spi5
#define spi6 _spi6
#define uart0 _uart0
#define uart2 _uart2
#define uart3 _uart3
#define uart4 _uart4
#define uart5 _uart5

#include "bcm2712.dtsi"

#undef i2c0
#undef i2c3
#undef i2c4
#undef i2c5
#undef i2c6
#undef i2c8
#undef i2s
#undef pwm0
#undef pwm1
#undef spi0
#undef spi3
#undef spi4
#undef spi5
#undef spi6
#undef uart0
#undef uart2
#undef uart3
#undef uart4
#undef uart5

/ {
	compatible = "raspberrypi,5-model-b", "brcm,bcm2712";
	model = "Raspberry Pi 5";

	/* Will be filled by the bootloader */
	memory@0 {
		device_type = "memory";
		reg = <0 0 0x28000000>;
	};

	leds: leds {
		compatible = "gpio-leds";

		act_led: led-act {
			label = "ACT";
			gpios = <&gio_aon 9 GPIO_ACTIVE_LOW>;
			default-state = "off";
			linux,default-trigger = "mmc0";
		};
	};

	sd_io_1v8_reg: sd_io_1v8_reg {
		compatible = "regulator-gpio";
		regulator-name = "vdd-sd-io";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		regulator-always-on;
		regulator-settling-time-us = <5000>;
		gpios = <&gio_aon 3 GPIO_ACTIVE_HIGH>;
		states = <1800000 0x1
			  3300000 0x0>;
		status = "okay";
	};

	sd_vcc_reg: sd_vcc_reg {
		compatible = "regulator-fixed";
		regulator-name = "vcc-sd";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		enable-active-high;
		gpios = <&gio_aon 4 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};

	wl_on_reg: wl_on_reg {
		compatible = "regulator-fixed";
		regulator-name = "wl-on-regulator";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		pinctrl-0 = <&wl_on_pins>;
		pinctrl-names = "default";

		gpio = <&gio 28 GPIO_ACTIVE_HIGH>;

		startup-delay-us = <150000>;
		enable-active-high;
	};

	clocks: clocks {
	};
};

// Add some labels to 2712 device

// The system UART
uart10: &_uart0 { status = "okay"; };

// The system SPI for the bootloader EEPROM
spi10: &_spi0 { status = "okay"; };

#include "bcm2712-rpi.dtsi"

/* SDIO1 is used to drive the SD card */
&sdio1 {
	pinctrl-0 = <&emmc_sd_pulls>, <&emmc_aon_cd_pins>;
	pinctrl-names = "default";
	vqmmc-supply = <&sd_io_1v8_reg>;
	vmmc-supply = <&sd_vcc_reg>;
	bus-width = <4>;
	sd-uhs-sdr50;
	sd-uhs-ddr50;
	sd-uhs-sdr104;
	//broken-cd;
	//no-1-8-v;
	status = "okay";
};

&pinctrl_aon {
	emmc_aon_cd_pins: emmc_aon_cd_pins {
		function = "sd_card_g";
		pins = "aon_gpio5";
		bias-pull-up;
	};

	/* Slight hack - only one PWM pin (status LED) is usable */
	aon_pwm_1pin: aon_pwm_1pin {
		function = "aon_pwm";
		pins = "aon_gpio9";
	};
};

&pinctrl {
	pwr_button_pins: pwr_button_pins {
		function = "gpio";
		pins = "gpio20";
		bias-pull-up;
	};

	wl_on_pins: wl_on_pins {
		function = "gpio";
		pins = "gpio28";
	};

	bt_shutdown_pins: bt_shutdown_pins {
		function = "gpio";
		pins = "gpio29";
	};

	emmc_sd_pulls: emmc_sd_pulls {
		function = "emmc_dat0", "emmc_dat1", "emmc_dat2", "emmc_dat3";
		bias-pull-up;
	};
};

/* uarta communicates with the BT module */
&uarta {
	uart-has-rtscts;
	auto-flow-control;
	status = "okay";
	clock-frequency = <96000000>;
	pinctrl-0 = <&uarta_24_pins &bt_shutdown_pins>;
	pinctrl-names = "default";

	bluetooth: bluetooth {
		compatible = "brcm,bcm43438-bt";
		max-speed = <3000000>;
		shutdown-gpios = <&gio 29 GPIO_ACTIVE_HIGH>;
		local-bd-address = [ 00 00 00 00 00 00 ];
	};
};

/ {
	chosen: chosen {
		bootargs = "coherent_pool=1M 8250.nr_uarts=1 pci=pcie_bus_safe snd_bcm2835.enable_compat_alsa=0 snd_bcm2835.enable_hdmi=1";
		stdout-path = "serial10:115200n8";
	};

	pwr_button {
		compatible = "gpio-keys";

		pinctrl-names = "default";
		pinctrl-0 = <&pwr_button_pins>;
		status = "okay";

		pwr_key: pwr {
			label = "pwr_button";
			// linux,code = <205>; // KEY_SUSPEND
			linux,code = <116>; // KEY_POWER
			gpios = <&gio 20 GPIO_ACTIVE_LOW>;
			debounce-interval = <50>; // ms
		};
	};
};

/* SDIO2 drives the WLAN interface */
&sdio2 {
	pinctrl-0 = <&sdio2_30_pins>;
	pinctrl-names = "default";
	bus-width = <4>;
	vmmc-supply = <&wl_on_reg>;
	sd-uhs-ddr50;
	non-removable;
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	wifi: wifi@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
		local-mac-address = [00 00 00 00 00 00];
	};
};

&pinctrl {
	spi10_gpio2: spi10_gpio2 {
		function = "vc_spi0";
		pins = "gpio2", "gpio3", "gpio4";
		bias-disable;
	};

	spi10_cs_gpio1: spi10_cs_gpio1 {
		function = "gpio";
		pins = "gpio1";
		bias-pull-up;
	};
};

spi10_pins: &spi10_gpio2 {};
spi10_cs_pins: &spi10_cs_gpio1 {};

&spi10 {
	pinctrl-names = "default";
	cs-gpios = <&gio 1 1>;
	pinctrl-0 = <&spi10_pins &spi10_cs_pins>;

	spidev10: spidev@0 {
		compatible = "spidev";
		reg = <0>;	/* CE0 */
		#address-cells = <1>;
		#size-cells = <0>;
		spi-max-frequency = <20000000>;
		status = "okay";
	};
};

// =============================================
// Board specific stuff here

&gio_aon {
	// Don't use GIO_AON as an interrupt controller because it will
	// clash with the firmware monitoring the PMIC interrupt via the VPU.

	/delete-property/ interrupt-controller;
};

&main_aon_irq {
	// Don't use the MAIN_AON_IRQ interrupt controller because it will
	// clash with the firmware monitoring the PMIC interrupt via the VPU.

	status = "disabled";
};
&gio {
	// The GPIOs above 35 are not used on Pi 5, so shrink the upper bank
	// to reduce the clutter in gpioinfo/pinctrl
	brcm,gpio-bank-widths = <32 4>;

	gpio-line-names =
		"-", // GPIO_000
		"2712_BOOT_CS_N", // GPIO_001
		"2712_BOOT_MISO", // GPIO_002
		"2712_BOOT_MOSI", // GPIO_003
		"2712_BOOT_SCLK", // GPIO_004
		"-", // GPIO_005
		"-", // GPIO_006
		"-", // GPIO_007
		"-", // GPIO_008
		"-", // GPIO_009
		"-", // GPIO_010
		"-", // GPIO_011
		"-", // GPIO_012
		"-", // GPIO_013
		"PCIE_SDA", // GPIO_014
		"PCIE_SCL", // GPIO_015
		"-", // GPIO_016
		"-", // GPIO_017
		"-", // GPIO_018
		"-", // GPIO_019
		"PWR_GPIO", // GPIO_020
		"2712_G21_FS", // GPIO_021
		"-", // GPIO_022
		"-", // GPIO_023
		"BT_RTS", // GPIO_024
		"BT_CTS", // GPIO_025
		"BT_TXD", // GPIO_026
		"BT_RXD", // GPIO_027
		"WL_ON", // GPIO_028
		"BT_ON", // GPIO_029
		"WIFI_SDIO_CLK", // GPIO_030
		"WIFI_SDIO_CMD", // GPIO_031
		"WIFI_SDIO_D0", // GPIO_032
		"WIFI_SDIO_D1", // GPIO_033
		"WIFI_SDIO_D2", // GPIO_034
		"WIFI_SDIO_D3"; // GPIO_035
};

&gio_aon {
	gpio-line-names =
		"RP1_SDA", // AON_GPIO_00
		"RP1_SCL", // AON_GPIO_01
		"RP1_RUN", // AON_GPIO_02
		"SD_IOVDD_SEL", // AON_GPIO_03
		"SD_PWR_ON", // AON_GPIO_04
		"SD_CDET_N", // AON_GPIO_05
		"SD_FLG_N", // AON_GPIO_06
		"-", // AON_GPIO_07
		"2712_WAKE", // AON_GPIO_08
		"2712_STAT_LED", // AON_GPIO_09
		"-", // AON_GPIO_10
		"-", // AON_GPIO_11
		"PMIC_INT", // AON_GPIO_12
		"UART_TX_FS", // AON_GPIO_13
		"UART_RX_FS", // AON_GPIO_14
		"-", // AON_GPIO_15
		"-", // AON_GPIO_16

		// Pad bank0 out to 32 entries
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "",

		"HDMI0_SCL", // AON_SGPIO_00
		"HDMI0_SDA", // AON_SGPIO_01
		"HDMI1_SCL", // AON_SGPIO_02
		"HDMI1_SDA", // AON_SGPIO_03
		"PMIC_SCL", // AON_SGPIO_04
		"PMIC_SDA"; // AON_SGPIO_05

	rp1_run_hog {
		gpio-hog;
		gpios = <2 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "RP1 RUN pin";
	};
};

/ {
	aliases: aliases {
		blconfig = &blconfig;
		bluetooth = &bluetooth;
		console = &uart10;
		wifi0 = &wifi;
		fb = &fb;
		mailbox = &mailbox;
		mmc0 = &sdio1;
	};
/*
	__overrides__ {
		bdaddr = <&bluetooth>, "local-bd-address[";
		button_debounce = <&pwr_key>, "debounce-interval:0";
		cooling_fan = <&fan>, "status", <&rp1_pwm1>, "status";
		uart0_console = <&uart0>,"status", <&aliases>, "console=",&uart0;
		i2c0 = <&i2c0>, "status";
		i2c1 = <&i2c1>, "status";
		i2c = <&i2c1>, "status";
		i2c_arm = <&i2c_arm>, "status";
		i2c_vc = <&i2c_vc>, "status";
		i2c_csi_dsi = <&i2c_csi_dsi>, "status";
		i2c_csi_dsi0 = <&i2c_csi_dsi0>, "status";
		i2c_csi_dsi1 = <&i2c_csi_dsi1>, "status";
		i2c0_baudrate = <&i2c0>, "clock-frequency:0";
		i2c1_baudrate = <&i2c1>, "clock-frequency:0";
		i2c_baudrate = <&i2c_arm>, "clock-frequency:0";
		i2c_arm_baudrate = <&i2c_arm>, "clock-frequency:0";
		i2c_vc_baudrate = <&i2c_vc>, "clock-frequency:0";
		krnbt = <&bluetooth>, "status";
		nvme = <&pciex1>, "status";
		pciex1 = <&pciex1>, "status";
		pciex1_gen = <&pciex1> , "max-link-speed:0";
		pciex1_no_l0s = <&pciex1>, "aspm-no-l0s?";
		pciex1_tperst_clk_ms = <&pciex1>, "brcm,tperst-clk-ms:0";
		pcie_tperst_clk_ms = <&pciex1>, "brcm,tperst-clk-ms:0";
		random = <&random>, "status";
		rtc_bbat_vchg = <&rpi_rtc>, "trickle-charge-microvolt:0";
		spi = <&spi0>, "status";
		suspend = <&pwr_key>, "linux,code:0=205";
		uart0 = <&uart0>, "status";
		wifiaddr = <&wifi>, "local-mac-address[";

		act_led_activelow = <&act_led>, "active-low?";
		act_led_trigger = <&act_led>, "linux,default-trigger";
		pwr_led_activelow = <&pwr_led>, "gpios:8";
		pwr_led_trigger = <&pwr_led>, "linux,default-trigger";
		drm_fb0_rp1_dsi0 = <&aliases>, "drm-fb0=",&dsi0;
		drm_fb0_rp1_dsi1 = <&aliases>, "drm-fb0=",&dsi1;
		drm_fb0_rp1_dpi = <&aliases>, "drm-fb0=",&dpi;
		drm_fb0_vc4 = <&aliases>, "drm-fb0=",&vc4;
		drm_fb1_rp1_dsi0 = <&aliases>, "drm-fb1=",&dsi0;
		drm_fb1_rp1_dsi1 = <&aliases>, "drm-fb1=",&dsi1;
		drm_fb1_rp1_dpi = <&aliases>, "drm-fb1=",&dpi;
		drm_fb1_vc4 = <&aliases>, "drm-fb1=",&vc4;
		drm_fb2_rp1_dsi0 = <&aliases>, "drm-fb2=",&dsi0;
		drm_fb2_rp1_dsi1 = <&aliases>, "drm-fb2=",&dsi1;
		drm_fb2_rp1_dpi = <&aliases>, "drm-fb2=",&dpi;
		drm_fb2_vc4 = <&aliases>, "drm-fb2=",&vc4;
	};
*/
};
