// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2024 NXP
 */

/dts-v1/;
/plugin/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include "imx95-clock.h"

&{/} {
	backlight_dsi: backlight-dsi {
		compatible = "pwm-backlight";
		pwms = <&tpm3 2 4000000 0>;
	};

	panel-lvds {
		compatible = "riverdi,rvt101hvdnwc00-b", "panel-lvds";
		backlight = <&backlight_dsi>;
		data-mapping = "vesa-24";
		height-mm = <136>;
		width-mm = <217>;

		panel-timing {
			clock-frequency = <70000000>;
			de-active = <1>;
			hactive = <1280 1280 1280>;
			hback-porch = <64 64 64>;
			hfront-porch = <16 16 16>;
			hsync-active = <0>;
			hsync-len = <24 24 24>;
			vactive = <800 800 800>;
			vback-porch = <24 24 24>;
			vfront-porch = <8 8 8>;
			vsync-active = <0>;
			vsync-len = <8 8 8>;
		};

		port {
			panel_lvds_in: endpoint {
				remote-endpoint = <&lvds_riv_out>;
			};
		};
	};
};

&display_pixel_link {
	status = "okay";
};

&dpu {
	assigned-clocks = <&scmi_clk IMX95_CLK_DISP1PIX>,
			  <&scmi_clk IMX95_CLK_VIDEOPLL1_VCO>,
			  <&scmi_clk IMX95_CLK_VIDEOPLL1>;
	assigned-clock-parents = <&scmi_clk IMX95_CLK_VIDEOPLL1>;
	assigned-clock-rates = <0>, <3360000000>, <420000000>;
};

&lpi2c2 {
	#address-cells = <1>;
	#size-cells = <0>;

	bridge@2c {
		compatible = "ti,sn65dsi83";
		reg = <0x2c>;
		enable-gpios = <&i2c7_pcal6524_23 10 GPIO_ACTIVE_HIGH>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;

				dsi_riv_in: endpoint {
					data-lanes = <1 2 3 4>;
					remote-endpoint = <&soc_dsi_out>;
				};
			};

			port@2 {
				reg = <2>;

				lvds_riv_out: endpoint {
					remote-endpoint = <&panel_lvds_in>;
				};
			};
		};
	};

	touch@41 {
		compatible = "ilitek,ili2132";
		reg = <0x41>;
		interrupt-parent = <&gpio3>;
		interrupts = <27 IRQ_TYPE_LEVEL_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_mipi_dsi_csi>, <&pinctrl_i2c7_pcal6524>;
		reset-gpios = <&i2c7_pcal6524_23 9 GPIO_ACTIVE_LOW>;
	};
};

&mipi_dsi {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@1 {
			reg = <1>;

			soc_dsi_out: endpoint {
				remote-endpoint = <&dsi_riv_in>;
			};
		};
	};
};

&pixel_interleaver {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	channel@0 {
		reg = <0>;
		status = "okay";
	};
};
