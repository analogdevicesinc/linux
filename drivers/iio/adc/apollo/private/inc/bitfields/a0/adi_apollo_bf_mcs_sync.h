/*!
 * @brief     SPI Register Definition Header File, automatically generated by
 *            yoda2h v1.3.8 at 7/19/2021 9:28:18 PM.
 * 
 * @copyright copyright(c) 2021 - Analog Devices Inc.All Rights Reserved.
 *            This software is proprietary to Analog Devices, Inc. and its
 *            licensor. By using this software you agree to the terms of the
 *            associated analog devices software license agreement.
 */

/*! 
 * @addtogroup APOLLO_BF
 * @{
 */
#ifndef __ADI_APOLLO_BF_MCS_SYNC_H__
#define __ADI_APOLLO_BF_MCS_SYNC_H__

/*============= D E F I N E S ==============*/
#define MCS_SYNC_MCSTOP0                         0x4C001410
#define MCS_SYNC_MCSTOP1                         0x4C001810
#define MCS_SYNC_MCSTOP2                         0x4C001C10

#define REG_CLOCKING_MODE_ADDR(inst)             ((inst) + 0x00000000)
#define BF_MCS_DIVG_EN_INFO(inst)                ((inst) + 0x00000000), 0x00000100
#define BF_CLOCKING_MODE_INFO(inst)              ((inst) + 0x00000000), 0x00000204

#define REG_SYNC_SYSREF_DELAY_0_ADDR(inst)       ((inst) + 0x00000001)
#define BF_SYNC_SYSREF_DELAY_INFO(inst)          ((inst) + 0x00000001), 0x00001000

#define REG_SYNC_SYSREF_DELAY_1_ADDR(inst)       ((inst) + 0x00000002)

#define REG_SYSREF_COUNT_ADDR(inst)              ((inst) + 0x00000003)
#define BF_SYSREF_COUNT_INFO(inst)               ((inst) + 0x00000003), 0x00000800

#define REG_SYSREF_PHASE0_ADDR(inst)             ((inst) + 0x00000004)
#define BF_SYSREF_PHASE_INFO(inst)               ((inst) + 0x00000004), 0x00001300

#define REG_SYSREF_PHASE1_ADDR(inst)             ((inst) + 0x00000005)

#define REG_SYSREF_PHASE2_ADDR(inst)             ((inst) + 0x00000006)

#define REG_SYSREF_ERR_WINDOW_ADDR(inst)         ((inst) + 0x00000007)
#define BF_SYSREF_ERR_WINDOW_INFO(inst)          ((inst) + 0x00000007), 0x00000700
#define BF_SYSREF_WITHIN_ERRWINDOW_INFO(inst)    ((inst) + 0x00000007), 0x00000107

#define REG_SYNC_MODE_ADDR(inst)                 ((inst) + 0x00000008)
#define BF_DYN_CFG_SYNC_INFO(inst)               ((inst) + 0x00000008), 0x00000100
#define BF_ONESHOT_SYNC_INFO(inst)               ((inst) + 0x00000008), 0x00000101
#define BF_MANUAL_SYNC_INFO(inst)                ((inst) + 0x00000008), 0x00000102
#define BF_TRIGGER_SYNC_INFO(inst)               ((inst) + 0x00000008), 0x00000103
#define BF_DYN_CFG_SYNC_DONE_INFO(inst)          ((inst) + 0x00000008), 0x00000104
#define BF_ONESHOT_SYNC_DONE_INFO(inst)          ((inst) + 0x00000008), 0x00000105
#define BF_MANUAL_SYNC_DONE_INFO(inst)           ((inst) + 0x00000008), 0x00000106
#define BF_TRIGGER_SYNC_DONE_INFO(inst)          ((inst) + 0x00000008), 0x00000107

#define REG_SOFT_OFFON_MODE_ADDR(inst)           ((inst) + 0x00000009)
#ifdef USE_PRIVATE_BF
#define BF_SOFT_OFFON_MODE_INFO(inst)            ((inst) + 0x00000009), 0x00000200
#endif /* USE_PRIVATE_BF */
#define BF_TRIGGER_SYNC_MODE_INFO(inst)          ((inst) + 0x00000009), 0x00000104

#define REG_SYSREF_AVERAGE_ADDR(inst)            ((inst) + 0x0000000A)
#define BF_SYSREF_AVERAGE_INFO(inst)             ((inst) + 0x0000000A), 0x00000300

#define REG_SUBCLASS_SEL_ADDR(inst)              ((inst) + 0x0000000B)
#define BF_SUBCLASS_SEL_INFO(inst)               ((inst) + 0x0000000B), 0x00000100

#ifdef USE_PRIVATE_BF
#define REG_NCO_SYNC_MS_TRIG_ADDR(inst)          ((inst) + 0x0000000C)
#define BF_NCO_SYNC_MS_TRIG_INFO(inst)           ((inst) + 0x0000000C), 0x00000100
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_NCOSYNC_SYSREF_MODE_ADDR(inst)       ((inst) + 0x0000000D)
#define BF_NCO_SYNC_SYSREF_MODE_TX_INFO(inst)    ((inst) + 0x0000000D), 0x00000200
#define BF_NCO_SYNC_SYSREF_MODE_RX_INFO(inst)    ((inst) + 0x0000000D), 0x00000202
#define BF_RXNCOSYNC_SYSREF_ONESHOT_INFO(inst)   ((inst) + 0x0000000D), 0x00000105
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_NCOSYNC_MS_MODE_ADDR(inst)           ((inst) + 0x0000000E)
#define BF_NCO_SYNC_MS_MODE_INFO(inst)           ((inst) + 0x0000000E), 0x00000200
#define BF_NCO_SYNC_MS_TRIG_SOURCE_INFO(inst)    ((inst) + 0x0000000E), 0x00000202
#define BF_NCO_SYNC_MS_EXTRA_LMFC_NUM_INFO(inst) ((inst) + 0x0000000E), 0x00000404
#endif /* USE_PRIVATE_BF */

#define REG_MCS_RESET_ADDR(inst)                 ((inst) + 0x0000000F)
#define BF_SYNCLOGIC_RESET_INFO(inst)            ((inst) + 0x0000000F), 0x00000100
#define BF_MCSTDC_RESET_INFO(inst)               ((inst) + 0x0000000F), 0x00000101
#define BF_MBTRIM_RESET_INFO(inst)               ((inst) + 0x0000000F), 0x00000102

#define REG_SYNCTRL_FSM_0_ADDR(inst)             ((inst) + 0x00000010)
#define BF_SYNCTRL_FSM_INFO(inst)                ((inst) + 0x00000010), 0x00001000

#define REG_SYNCTRL_FSM_1_ADDR(inst)             ((inst) + 0x00000011)

#define REG_SYNCTRL_MAN_0_ADDR(inst)             ((inst) + 0x00000012)
#define BF_SYNCTRL_MAN_INFO(inst)                ((inst) + 0x00000012), 0x00001000

#define REG_SYNCTRL_MAN_1_ADDR(inst)             ((inst) + 0x00000013)

#define REG_SYNCSTEP_INTERVAL_ADDR(inst)         ((inst) + 0x00000014)
#define BF_CYCLES_BF_SYNCSTEP_INFO(inst)         ((inst) + 0x00000014), 0x00000400
#define BF_CYCLES_AF_SYNCSTEP_INFO(inst)         ((inst) + 0x00000014), 0x00000404

#ifdef USE_PRIVATE_BF
#define REG_SYNC_DEBUG0_ADDR(inst)               ((inst) + 0x00000015)
#define BF_AVRG_IN_MONITOR_EN_INFO(inst)         ((inst) + 0x00000015), 0x00000100
#define BF_AVRG_FLOW_EN_INFO(inst)               ((inst) + 0x00000015), 0x00000105
#endif /* USE_PRIVATE_BF */

#define REG_SYNC_DEBUG1_ADDR(inst)               ((inst) + 0x00000016)
#define BF_SYNC_STATE_INFO(inst)                 ((inst) + 0x00000016), 0x00000300
#ifdef USE_PRIVATE_BF
#define BF_SOFT_OFFON_STATE_INFO(inst)           ((inst) + 0x00000016), 0x00000304
#endif /* USE_PRIVATE_BF */

#define REG_INT_SYSREF_PERIOD_0_ADDR(inst)       ((inst) + 0x00000017)
#define BF_INT_SYSREF_PERIOD_INFO(inst)          ((inst) + 0x00000017), 0x00001000

#define REG_INT_SYSREF_PERIOD_1_ADDR(inst)       ((inst) + 0x00000018)

#define REG_TRIG_PHASE_0_ADDR(inst)              ((inst) + 0x00000019)
#define BF_TRIG_PHASE_INFO(inst)                 ((inst) + 0x00000019), 0x00001000

#define REG_TRIG_PHASE_1_ADDR(inst)              ((inst) + 0x0000001A)

#define REG_SYNC_MASK_ADC_ADDR(inst)             ((inst) + 0x0000001B)
#define BF_SYNC_MASK_ADC_INFO(inst)              ((inst) + 0x0000001B), 0x00000400

#define REG_SYNC_MASK_DAC_ADDR(inst)             ((inst) + 0x0000001C)
#define BF_SYNC_MASK_DAC_INFO(inst)              ((inst) + 0x0000001C), 0x00000800

#define REG_SYNC_MASK_AB_ADDR(inst)              ((inst) + 0x0000001D)
#define BF_SYNC_MASK_ADC_AB_INFO(inst)           ((inst) + 0x0000001D), 0x00000200
#define BF_SYNC_MASK_DAC_AB_INFO(inst)           ((inst) + 0x0000001D), 0x00000404

#define REG_MANUAL_ROT_CENTER_ADDR(inst)         ((inst) + 0x00000020)
#define BF_MASTERDIV_MANUAL_ROT_INFO(inst)       ((inst) + 0x00000020), 0x00000100

#define REG_MASTERDIV4_ROT_MAP_ADDR(inst)        ((inst) + 0x00000021)
#define BF_MASTERDIV4_ROTMAP_INFO(inst)          ((inst) + 0x00000021), 0x00000800

#define REG_MASTERDIV8_ROT_MAP_0_ADDR(inst)      ((inst) + 0x0000002A)
#define BF_MASTERDIV8_ROTMAP_INFO(inst)          ((inst) + 0x0000002A), 0x00001800

#define REG_MASTERDIV8_ROT_MAP_1_ADDR(inst)      ((inst) + 0x0000002B)

#define REG_MASTERDIV8_ROT_MAP_2_ADDR(inst)      ((inst) + 0x0000002C)

#endif /* __ADI_APOLLO_BF_MCS_SYNC_H__ */
/*! @} */
