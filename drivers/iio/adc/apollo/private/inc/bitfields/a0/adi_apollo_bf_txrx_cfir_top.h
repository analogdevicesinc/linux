/*!
 * @brief     SPI Register Definition Header File, automatically generated by
 *            yoda2h v1.3.8 at 7/19/2021 9:28:20 PM.
 * 
 * @copyright copyright(c) 2021 - Analog Devices Inc.All Rights Reserved.
 *            This software is proprietary to Analog Devices, Inc. and its
 *            licensor. By using this software you agree to the terms of the
 *            associated analog devices software license agreement.
 */

/*! 
 * @addtogroup APOLLO_BF
 * @{
 */
#ifndef __ADI_APOLLO_BF_TXRX_CFIR_TOP_H__
#define __ADI_APOLLO_BF_TXRX_CFIR_TOP_H__

/*============= D E F I N E S ==============*/
#define RX_CFIR_TOP_RX_SLICE_0_RX_DIGITAL0           0x60364000
#define RX_CFIR_TOP_RX_SLICE_1_RX_DIGITAL0           0x60564000
#define RX_CFIR_TOP_RX_SLICE_0_RX_DIGITAL1           0x60B64000
#define RX_CFIR_TOP_RX_SLICE_1_RX_DIGITAL1           0x60D64000
#define TX_CFIR_TOP_TX_SLICE_0_TX_DIGITAL0           0x61304000
#define TX_CFIR_TOP_TX_SLICE_1_TX_DIGITAL0           0x61504000
#define TX_CFIR_TOP_TX_SLICE_0_TX_DIGITAL1           0x61B04000
#define TX_CFIR_TOP_TX_SLICE_1_TX_DIGITAL1           0x61D04000

#define REG_CFIR_MODE_ADDR(inst)                     ((inst) + 0x00000000)
#define BF_CFIR_BYPASS_INFO(inst)                    ((inst) + 0x00000000), 0x00000100

#define REG_CFIR_CFG_ADDR(inst)                      ((inst) + 0x00000001)
#define BF_CFIR_SPARSE_FILT_EN_INFO(inst)            ((inst) + 0x00000001), 0x00000100
#define BF_CFIR_32TAPS_EN_INFO(inst)                 ((inst) + 0x00000001), 0x00000101

#define REG_CFIR_PROFILE_ADDR(inst)                  ((inst) + 0x00000002)
#define BF_COEFF_PROFILE_SEL_INFO(inst)              ((inst) + 0x00000002), 0x00000400
#define BF_GPIO_PROFILE_EN_INFO(inst)                ((inst) + 0x00000002), 0x00000104

#define REG_CFIR_TRIGGER_ADDR(inst)                  ((inst) + 0x00000003)
#define BF_TRIGGER_EN_TXRX_CFIR_TOP_INFO(inst)       ((inst) + 0x00000003), 0x00000100
#define BF_COEFF_TRANSFER_INFO(inst)                 ((inst) + 0x00000003), 0x00000101

#define REG_CFIR_GAIN0_1_ADDR(inst)                  ((inst) + 0x00000010)
#define BF_CFIR_GAIN0_1_INFO(inst)                   ((inst) + 0x00000010), 0x00000300

#define REG_CFIR_GAIN1_1_ADDR(inst)                  ((inst) + 0x00000011)
#define BF_CFIR_GAIN1_1_INFO(inst)                   ((inst) + 0x00000011), 0x00000300

#define REG_CFIR_GAIN2_1_ADDR(inst)                  ((inst) + 0x00000012)
#define BF_CFIR_GAIN2_1_INFO(inst)                   ((inst) + 0x00000012), 0x00000300

#define REG_CFIR_GAIN3_1_ADDR(inst)                  ((inst) + 0x00000013)
#define BF_CFIR_GAIN3_1_INFO(inst)                   ((inst) + 0x00000013), 0x00000300

#define REG_CFIR_GAIN0_2_ADDR(inst)                  ((inst) + 0x00000014)
#define BF_CFIR_GAIN0_2_INFO(inst)                   ((inst) + 0x00000014), 0x00000300

#define REG_CFIR_GAIN1_2_ADDR(inst)                  ((inst) + 0x00000015)
#define BF_CFIR_GAIN1_2_INFO(inst)                   ((inst) + 0x00000015), 0x00000300

#define REG_CFIR_GAIN2_2_ADDR(inst)                  ((inst) + 0x00000016)
#define BF_CFIR_GAIN2_2_INFO(inst)                   ((inst) + 0x00000016), 0x00000300

#define REG_CFIR_GAIN3_2_ADDR(inst)                  ((inst) + 0x00000017)
#define BF_CFIR_GAIN3_2_INFO(inst)                   ((inst) + 0x00000017), 0x00000300

#ifdef USE_PRIVATE_BF
#define REG_CFIR_BIST_CTRL_ADDR(inst)                ((inst) + 0x00000018)
#define BF_CFIR_BIST_EN_INFO(inst)                   ((inst) + 0x00000018), 0x00000100
#define BF_CFIR_BIST_INIT_INFO(inst)                 ((inst) + 0x00000018), 0x00000101
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_CFIR_BIST_CRC_LSB_ADDR(inst)             ((inst) + 0x00000019)
#define BF_CFIR_BIST_CRC_INFO(inst)                  ((inst) + 0x00000019), 0x00001000
#endif /* USE_PRIVATE_BF */

#define REG_CFIR_BIST_CRC_MSB_ADDR(inst)             ((inst) + 0x0000001A)

#define REG_I_COMP_SCAL_LSB_1_ADDR(inst, n)          ((inst) + 0x00000020 + 2 * (n))
#define BF_I_COMPLEX_SCALAR_1_INFO(inst, n)          ((inst) + 0x00000020 + 2 * (n)), 0x00001000

#define REG_I_COMP_SCAL_MSB_1_ADDR(inst, n)          ((inst) + 0x00000021 + 2 * (n))

#define REG_Q_COMP_SCAL_LSB_1_ADDR(inst, n)          ((inst) + 0x00000028 + 2 * (n))
#define BF_Q_COMPLEX_SCALAR_1_INFO(inst, n)          ((inst) + 0x00000028 + 2 * (n)), 0x00001000

#define REG_Q_COMP_SCAL_MSB_1_ADDR(inst, n)          ((inst) + 0x00000029 + 2 * (n))

#define REG_I_COMP_SCAL_LSB_2_ADDR(inst, n)          ((inst) + 0x00000030 + 2 * (n))
#define BF_I_COMPLEX_SCALAR_2_INFO(inst, n)          ((inst) + 0x00000030 + 2 * (n)), 0x00001000

#define REG_I_COMP_SCAL_MSB_2_ADDR(inst, n)          ((inst) + 0x00000031 + 2 * (n))

#define REG_Q_COMP_SCAL_LSB_2_ADDR(inst, n)          ((inst) + 0x00000038 + 2 * (n))
#define BF_Q_COMPLEX_SCALAR_2_INFO(inst, n)          ((inst) + 0x00000038 + 2 * (n)), 0x00001000

#define REG_Q_COMP_SCAL_MSB_2_ADDR(inst, n)          ((inst) + 0x00000039 + 2 * (n))

#define REG_DPATH0_MEM_SEL_1_ADDR(inst)              ((inst) + 0x00000040)
#define BF_DPATH0_MEM_SEL0_1_INFO(inst)              ((inst) + 0x00000040), 0x00000200
#define BF_DPATH0_MEM_SEL1_1_INFO(inst)              ((inst) + 0x00000040), 0x00000202
#define BF_DPATH0_MEM_SEL2_1_INFO(inst)              ((inst) + 0x00000040), 0x00000204

#define REG_DPATH1_MEM_SEL_1_ADDR(inst)              ((inst) + 0x00000041)
#define BF_DPATH1_MEM_SEL0_1_INFO(inst)              ((inst) + 0x00000041), 0x00000200
#define BF_DPATH1_MEM_SEL1_1_INFO(inst)              ((inst) + 0x00000041), 0x00000202
#define BF_DPATH1_MEM_SEL2_1_INFO(inst)              ((inst) + 0x00000041), 0x00000204

#define REG_DPATH2_MEM_SEL_1_ADDR(inst)              ((inst) + 0x00000042)
#define BF_DPATH2_MEM_SEL0_1_INFO(inst)              ((inst) + 0x00000042), 0x00000200
#define BF_DPATH2_MEM_SEL1_1_INFO(inst)              ((inst) + 0x00000042), 0x00000202
#define BF_DPATH2_MEM_SEL2_1_INFO(inst)              ((inst) + 0x00000042), 0x00000204

#define REG_DPATH3_MEM_SEL_1_ADDR(inst)              ((inst) + 0x00000043)
#define BF_DPATH3_MEM_SEL0_1_INFO(inst)              ((inst) + 0x00000043), 0x00000200
#define BF_DPATH3_MEM_SEL1_1_INFO(inst)              ((inst) + 0x00000043), 0x00000202
#define BF_DPATH3_MEM_SEL2_1_INFO(inst)              ((inst) + 0x00000043), 0x00000204

#define REG_DPATH0_MEM_SEL_2_ADDR(inst)              ((inst) + 0x00000044)
#define BF_DPATH0_MEM_SEL0_2_INFO(inst)              ((inst) + 0x00000044), 0x00000200
#define BF_DPATH0_MEM_SEL1_2_INFO(inst)              ((inst) + 0x00000044), 0x00000202
#define BF_DPATH0_MEM_SEL2_2_INFO(inst)              ((inst) + 0x00000044), 0x00000204

#define REG_DPATH1_MEM_SEL_2_ADDR(inst)              ((inst) + 0x00000045)
#define BF_DPATH1_MEM_SEL0_2_INFO(inst)              ((inst) + 0x00000045), 0x00000200
#define BF_DPATH1_MEM_SEL1_2_INFO(inst)              ((inst) + 0x00000045), 0x00000202
#define BF_DPATH1_MEM_SEL2_2_INFO(inst)              ((inst) + 0x00000045), 0x00000204

#define REG_DPATH2_MEM_SEL_2_ADDR(inst)              ((inst) + 0x00000046)
#define BF_DPATH2_MEM_SEL0_2_INFO(inst)              ((inst) + 0x00000046), 0x00000200
#define BF_DPATH2_MEM_SEL1_2_INFO(inst)              ((inst) + 0x00000046), 0x00000202
#define BF_DPATH2_MEM_SEL2_2_INFO(inst)              ((inst) + 0x00000046), 0x00000204

#define REG_DPATH3_MEM_SEL_2_ADDR(inst)              ((inst) + 0x00000047)
#define BF_DPATH3_MEM_SEL0_2_INFO(inst)              ((inst) + 0x00000047), 0x00000200
#define BF_DPATH3_MEM_SEL1_2_INFO(inst)              ((inst) + 0x00000047), 0x00000202
#define BF_DPATH3_MEM_SEL2_2_INFO(inst)              ((inst) + 0x00000047), 0x00000204

#ifdef USE_PRIVATE_BF
#define REG_CFIR_CLK_OFFSET_WR_EN_ADDR(inst)         ((inst) + 0x00000048)
#define BF_CLK_OFFSET_WR_EN_TXRX_CFIR_TOP_INFO(inst) ((inst) + 0x00000048), 0x00000100
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_CFIR_ENGCLK_PH0_OFFSET_ADDR(inst, n)     ((inst) + 0x00000049 + 1 * (n))
#define BF_ENGCLK_PH0_OFFSET_INFO(inst, n)           ((inst) + 0x00000049 + 1 * (n)), 0x00000800
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_CFIR_ENGCLK_PH4_OFFSET_ADDR(inst, n)     ((inst) + 0x0000004D + 1 * (n))
#define BF_ENGCLK_PH4_OFFSET_INFO(inst, n)           ((inst) + 0x0000004D + 1 * (n)), 0x00000800
#endif /* USE_PRIVATE_BF */

#define REG_CFIR_IRQ_ENABLE_ADDR(inst)               ((inst) + 0x00000051)
#define BF_IRQ_ENABLE_I_TXRX_CFIR_TOP_INFO(inst)     ((inst) + 0x00000051), 0x00000100
#define BF_IRQ_ENABLE_Q_TXRX_CFIR_TOP_INFO(inst)     ((inst) + 0x00000051), 0x00000101

#define REG_CFIR_IRQ_STATUS_ADDR(inst)               ((inst) + 0x00000052)
#define BF_IRQ_STATUS_I_TXRX_CFIR_TOP_INFO(inst)     ((inst) + 0x00000052), 0x00000100
#define BF_IRQ_STATUS_Q_TXRX_CFIR_TOP_INFO(inst)     ((inst) + 0x00000052), 0x00000101

#endif /* __ADI_APOLLO_BF_TXRX_CFIR_TOP_H__ */
/*! @} */
