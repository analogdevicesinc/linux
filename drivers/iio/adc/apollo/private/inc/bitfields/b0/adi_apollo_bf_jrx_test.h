/*!
 * @brief     SPI Register Definition Header File, automatically generated by
 *            yoda2h v1.3.8 at 2/15/2023 10:39:25 AM.
 * 
 * @copyright copyright(c) 2023 - Analog Devices Inc.All Rights Reserved.
 *            This software is proprietary to Analog Devices, Inc. and its
 *            licensor. By using this software you agree to the terms of the
 *            associated analog devices software license agreement.
 */

/*! 
 * @addtogroup APOLLO_BF
 * @{
 */
#ifndef __ADI_APOLLO_BF_JRX_TEST_H__
#define __ADI_APOLLO_BF_JRX_TEST_H__

/*============= D E F I N E S ==============*/
#define JRX_TEST_JRX_TX_DIGITAL0                         0x61600000
#define JRX_TEST_JRX_TX_DIGITAL1                         0x61E00000

#ifdef USE_PRIVATE_BF
#define REG_JRX_TEST_CONFIG0_ADDR(inst)                  ((inst) + 0x00000000)
#define BF_JRX_TEST_LANE_CLEAR_ERRORS_INFO(inst)         ((inst) + 0x00000000), 0x00000100
#define BF_JRX_TEST_LANE_UPDATE_ERROR_COUNT_INFO(inst)   ((inst) + 0x00000000), 0x00000101
#define BF_JRX_TEST_PRBS_SWAP_ENDIANNESS_INFO(inst)      ((inst) + 0x00000000), 0x00000103
#define BF_JRX_TEST_SAMPLE_UPDATE_ERROR_COUNT_INFO(inst) ((inst) + 0x00000000), 0x00000104
#define BF_JRX_TEST_SAMPLE_CLEAR_ERRORS_INFO(inst)       ((inst) + 0x00000000), 0x00000105
#define BF_JRX_TEST_SAMPLE_INVALID_DATA_FLAG_INFO(inst)  ((inst) + 0x00000000), 0x00000106
#define BF_JRX_TEST_SAMPLE_ERROR_FLAG_INFO(inst)         ((inst) + 0x00000000), 0x00000107
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_JRX_TEST_SAMPLE_ERROR_COUNT_ADDR(inst)       ((inst) + 0x00000001)
#define BF_JRX_TEST_SAMPLE_ERROR_COUNT_INFO(inst)        ((inst) + 0x00000001), 0x00000800
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_JRX_TEST_CONFIG1_ADDR(inst)                  ((inst) + 0x00000002)
#define BF_JRX_TEST_MODE_INFO(inst)                      ((inst) + 0x00000002), 0x00000300
#define BF_JRX_TEST_SOURCE_INFO(inst)                    ((inst) + 0x00000002), 0x00000107
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_JRX_TEST_LANE_STATUS_ADDR(inst, n)           ((inst) + 0x00000003 + 1 * (n))
#define BF_JRX_TEST_LANE_INV_INFO(inst, n)               ((inst) + 0x00000003 + 1 * (n)), 0x00000105
#define BF_JRX_TEST_LANE_INVALID_DATA_FLAG_INFO(inst, n) ((inst) + 0x00000003 + 1 * (n)), 0x00000106
#define BF_JRX_TEST_LANE_ERROR_FLAG_INFO(inst, n)        ((inst) + 0x00000003 + 1 * (n)), 0x00000107
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_JRX_TEST_LANE_ERROR_COUNT0_ADDR(inst, n)     ((inst) + 0x00000013 + 1 * (n))
#define BF_JRX_TEST_LANE_ERROR_COUNT_INFO(inst, n)       ((inst) + 0x00000013 + 1 * (n)), 0x00001800
#endif /* USE_PRIVATE_BF */

#define REG_JRX_TEST_LANE_ERROR_COUNT1_ADDR(inst, n)     ((inst) + 0x00000023 + 1 * (n))

#define REG_JRX_TEST_LANE_ERROR_COUNT2_ADDR(inst, n)     ((inst) + 0x00000033 + 1 * (n))

#ifdef USE_PRIVATE_BF
#define REG_JRX_TEST_USER_DATA0_ADDR(inst)               ((inst) + 0x00000043)
#define BF_JRX_TEST_USER_DATA_INFO(inst)                 ((inst) + 0x00000043), 0x00002000
#endif /* USE_PRIVATE_BF */

#define REG_JRX_TEST_USER_DATA1_ADDR(inst)               ((inst) + 0x00000044)

#define REG_JRX_TEST_USER_DATA2_ADDR(inst)               ((inst) + 0x00000045)

#define REG_JRX_TEST_USER_DATA3_ADDR(inst)               ((inst) + 0x00000046)

#endif /* __ADI_APOLLO_BF_JRX_TEST_H__ */
/*! @} */
