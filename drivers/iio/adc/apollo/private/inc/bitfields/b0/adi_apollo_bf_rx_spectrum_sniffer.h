/*!
 * @brief     SPI Register Definition Header File, automatically generated by
 *            yoda2h v1.3.8 at 2/15/2023 10:39:22 AM.
 * 
 * @copyright copyright(c) 2023 - Analog Devices Inc.All Rights Reserved.
 *            This software is proprietary to Analog Devices, Inc. and its
 *            licensor. By using this software you agree to the terms of the
 *            associated analog devices software license agreement.
 */

/*! 
 * @addtogroup APOLLO_BF
 * @{
 */
#ifndef __ADI_APOLLO_BF_RX_SPECTRUM_SNIFFER_H__
#define __ADI_APOLLO_BF_RX_SPECTRUM_SNIFFER_H__

/*============= D E F I N E S ==============*/
#define RX_SPECTRUM_SNIFFER_RX_SLICE_0_RX_DIGITAL0 0x60205000
#define RX_SPECTRUM_SNIFFER_RX_SLICE_1_RX_DIGITAL0 0x60405000
#define RX_SPECTRUM_SNIFFER_RX_SLICE_0_RX_DIGITAL1 0x60A05000
#define RX_SPECTRUM_SNIFFER_RX_SLICE_1_RX_DIGITAL1 0x60C05000

#define REG_SPECTRUM_SNIFFER_CONTROL_1_ADDR(inst)  ((inst) + 0x00000000)
#define BF_SPECTRUM_SNIFFER_EN_INFO(inst)          ((inst) + 0x00000000), 0x00000100
#define BF_FFT_ENABLE_INFO(inst)                   ((inst) + 0x00000000), 0x00000101
#define BF_SORT_EN_INFO(inst)                      ((inst) + 0x00000000), 0x00000102
#define BF_MAGNITUDE_IQ_N_INFO(inst)               ((inst) + 0x00000000), 0x00000103
#define BF_FORCE_SORT_STORE_INFO(inst)             ((inst) + 0x00000000), 0x00000104
#define BF_FFT_HOLD_INFO(inst)                     ((inst) + 0x00000000), 0x00000105
#define BF_FFT_ENABLE_SEL_INFO(inst)               ((inst) + 0x00000000), 0x00000106
#define BF_FFT_HOLD_SEL_INFO(inst)                 ((inst) + 0x00000000), 0x00000107

#define REG_SPECTRUM_SNIFFER_CONTROL_2_ADDR(inst)  ((inst) + 0x00000001)
#define BF_REAL_MODE_INFO(inst)                    ((inst) + 0x00000001), 0x00000100
#define BF_CONTINUOUS_MODE_INFO(inst)              ((inst) + 0x00000001), 0x00000101
#define BF_BOTTOM_FFT_ENABLE_INFO(inst)            ((inst) + 0x00000001), 0x00000102
#define BF_WINDOW_ENABLE_INFO(inst)                ((inst) + 0x00000001), 0x00000103
#define BF_LOW_POWER_INFO(inst)                    ((inst) + 0x00000001), 0x00000104
#define BF_DITHER_ENABLE_INFO(inst)                ((inst) + 0x00000001), 0x00000105

#define REG_ALPHA_FACTOR_ADDR(inst)                ((inst) + 0x00000002)
#define BF_ALPHA_FACTOR_INFO(inst)                 ((inst) + 0x00000002), 0x00000400

#define REG_MAX_THRESHOLD_ADDR(inst)               ((inst) + 0x00000003)
#define BF_MAX_THRESHOLD_INFO(inst)                ((inst) + 0x00000003), 0x00000800

#define REG_MIN_THRESHOLD_ADDR(inst)               ((inst) + 0x00000004)
#define BF_MIN_THRESHOLD_INFO(inst)                ((inst) + 0x00000004), 0x00000800

#define REG_SPECTRUM_SNIFFER_STATUS_ADDR(inst)     ((inst) + 0x00000005)
#define BF_FFT_DONE_INFO(inst)                     ((inst) + 0x00000005), 0x00000100
#define BF_DBG_MAG_OVERFLOW_INFO(inst)             ((inst) + 0x00000005), 0x00000101

#define REG_MAGNITUDE_I_0_ADDR(inst, n)            ((inst) + 0x00000006 + 4 * (n))
#define BF_MAGNITUDE_I_INFO(inst, n)               ((inst) + 0x00000006 + 4 * (n)), 0x00000900

#define REG_MAGNITUDE_I_1_ADDR(inst, n)            ((inst) + 0x00000007 + 4 * (n))

#define REG_BIN_NUMBER_Q_0_ADDR(inst, n)           ((inst) + 0x00000008 + 4 * (n))
#define BF_BIN_NUMBER_Q_INFO(inst, n)              ((inst) + 0x00000008 + 4 * (n)), 0x00000900

#define REG_BIN_NUMBER_Q_1_ADDR(inst, n)           ((inst) + 0x00000009 + 4 * (n))

#define REG_MAX_THRESHOLD_BIN_ADDR(inst, n)        ((inst) + 0x00000806 + 1 * (n))
#define BF_MAX_THRESHOLD_BIN_INFO(inst, n)         ((inst) + 0x00000806 + 1 * (n)), 0x00000800

#define REG_MIN_THRESHOLD_BIN_ADDR(inst, n)        ((inst) + 0x00000846 + 1 * (n))
#define BF_MIN_THRESHOLD_BIN_INFO(inst, n)         ((inst) + 0x00000846 + 1 * (n)), 0x00000800

#ifdef USE_PRIVATE_BF
#define REG_BIST_CTRL_ADDR(inst)                   ((inst) + 0x00000886)
#define BF_BIST_EN_RX_SPECTRUM_SNIFFER_INFO(inst)  ((inst) + 0x00000886), 0x00000100
#define BF_BIST_INIT_INFO(inst)                    ((inst) + 0x00000886), 0x00000101
#endif /* USE_PRIVATE_BF */

#ifdef USE_PRIVATE_BF
#define REG_BIST_CRC_LSB_ADDR(inst)                ((inst) + 0x00000887)
#define BF_BIST_CRC_INFO(inst)                     ((inst) + 0x00000887), 0x00001000
#endif /* USE_PRIVATE_BF */

#define REG_BIST_CRC_MSB_ADDR(inst)                ((inst) + 0x00000888)

#ifdef USE_PRIVATE_BF
#define REG_BIST_STATUS_ADDR(inst)                 ((inst) + 0x00000889)
#define BF_BIST_EN_STATUS_INFO(inst)               ((inst) + 0x00000889), 0x00000100
#endif /* USE_PRIVATE_BF */

#endif /* __ADI_APOLLO_BF_RX_SPECTRUM_SNIFFER_H__ */
/*! @} */
