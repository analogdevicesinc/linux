/*!
 * @brief     SPI Register Definition Header File, automatically generated by
 *            yoda2h v1.3.8 at 2/15/2023 10:39:24 AM.
 * 
 * @copyright copyright(c) 2023 - Analog Devices Inc.All Rights Reserved.
 *            This software is proprietary to Analog Devices, Inc. and its
 *            licensor. By using this software you agree to the terms of the
 *            associated analog devices software license agreement.
 */

/*! 
 * @addtogroup APOLLO_BF
 * @{
 */
#ifndef __ADI_APOLLO_BF_TX_PAPROT_H__
#define __ADI_APOLLO_BF_TX_PAPROT_H__

/*============= D E F I N E S ==============*/
#define TX_PAPROT0_TX_SLICE_0_TX_DIGITAL0              0x61202000
#define TX_PAPROT1_TX_SLICE_0_TX_DIGITAL0              0x61203000
#define TX_PAPROT0_TX_SLICE_1_TX_DIGITAL0              0x61402000
#define TX_PAPROT1_TX_SLICE_1_TX_DIGITAL0              0x61403000
#define TX_PAPROT0_TX_SLICE_0_TX_DIGITAL1              0x61A02000
#define TX_PAPROT1_TX_SLICE_0_TX_DIGITAL1              0x61A03000
#define TX_PAPROT0_TX_SLICE_1_TX_DIGITAL1              0x61C02000
#define TX_PAPROT1_TX_SLICE_1_TX_DIGITAL1              0x61C03000

#define REG_ALARM_CNTRL0_ADDR(inst)                    ((inst) + 0x00000000)
#define BF_JESD_ERR_EN_INFO(inst)                      ((inst) + 0x00000000), 0x00000100
#ifdef USE_PRIVATE_BF
#define BF_CLK_STABILITY_CHECK_BYPASS_INFO(inst)       ((inst) + 0x00000000), 0x00000101
#endif /* USE_PRIVATE_BF */
#define BF_AUTO_DYN_RECONF_EN_INFO(inst)               ((inst) + 0x00000000), 0x00000102
#ifdef USE_PRIVATE_BF
#define BF_RESET_DYN_SYNC_SM_INFO(inst)                ((inst) + 0x00000000), 0x00000103
#endif /* USE_PRIVATE_BF */
#define BF_AVG_PWR_ERR_EN_INFO(inst)                   ((inst) + 0x00000000), 0x00000104
#define BF_SRL_ERR_EN_INFO(inst)                       ((inst) + 0x00000000), 0x00000105
#define BF_RAMPDWN_TO_PAPIN_EN_INFO(inst)              ((inst) + 0x00000000), 0x00000106
#ifdef USE_PRIVATE_BF
#define BF_RESET_ALARM_INFO(inst)                      ((inst) + 0x00000000), 0x00000107
#endif /* USE_PRIVATE_BF */

#define REG_ALARM_CNTRL1_ADDR(inst)                    ((inst) + 0x00000001)
#define BF_FORCE_ZERO_FLUSH_EN_INFO(inst)              ((inst) + 0x00000001), 0x00000100
#define BF_FORCE_ZERO_FLUSH_SPI_INFO(inst)             ((inst) + 0x00000001), 0x00000101
#define BF_DP_ZERO_FLUSH_SEL_0_INFO(inst)              ((inst) + 0x00000001), 0x00000202
#define BF_DP_ZERO_FLUSH_SEL_1_INFO(inst)              ((inst) + 0x00000001), 0x00000204
#define BF_DATA_READY_AUTO_CONFIG_EN_INFO(inst)        ((inst) + 0x00000001), 0x00000106
#define BF_JESD_ERR_AUTO_CONFIG_EN_INFO(inst)          ((inst) + 0x00000001), 0x00000107

#define REG_ALARM_CNTRL2_ADDR(inst)                    ((inst) + 0x00000002)
#define BF_JESD_ERR_SEL_RAMP_INFO(inst)                ((inst) + 0x00000002), 0x00000200
#define BF_DATA_READY_SEL_RAMP_INFO(inst)              ((inst) + 0x00000002), 0x00000202
#define BF_ZERO_FLUSH_TXEN_RISE_EN_INFO(inst)          ((inst) + 0x00000002), 0x00000104
#define BF_ZERO_FLUSH_TXEN_FALL_EN_INFO(inst)          ((inst) + 0x00000002), 0x00000105
#define BF_ZERO_FLUSH_DYN_RECONF_RAMP_UP_EN_INFO(inst) ((inst) + 0x00000002), 0x00000106
#define BF_ZERO_FLUSH_CLOCK_STABLE_RISE_EN_INFO(inst)  ((inst) + 0x00000002), 0x00000107

#define REG_ALARM_CNTRL3_ADDR(inst)                    ((inst) + 0x00000003)
#define BF_ZERO_FLUSH_START_EN_INFO(inst)              ((inst) + 0x00000003), 0x00000100
#define BF_SM_PAUSE_EN_INFO(inst)                      ((inst) + 0x00000003), 0x00000101
#define BF_SM_RESUME_SPI_INFO(inst)                    ((inst) + 0x00000003), 0x00000102

#define REG_PASM_CTRL0_ADDR(inst)                      ((inst) + 0x00000004)
#define BF_SKIP_RAMP_DWN_INFO(inst)                    ((inst) + 0x00000004), 0x00000100
#define BF_RAMP_DWN_TIMER_EN_INFO(inst)                ((inst) + 0x00000004), 0x00000101
#define BF_RAMP_UP_TIMER_EN_INFO(inst)                 ((inst) + 0x00000004), 0x00000102
#define BF_ENABLE_PAPROTSM_INFO(inst)                  ((inst) + 0x00000004), 0x00000103
#define BF_SKIP_RAMP_UP_INFO(inst)                     ((inst) + 0x00000004), 0x00000104
#define BF_HOLD_SAMPLE_EN_INFO(inst)                   ((inst) + 0x00000004), 0x00000105
#define BF_RESET_RAMP_GAIN_INFO(inst)                  ((inst) + 0x00000004), 0x00000106
#define BF_DRIVE_SM_BY_DIG_EN_INFO(inst)               ((inst) + 0x00000004), 0x00000107

#define REG_START_TIMER_ADDR(inst)                     ((inst) + 0x00000005)
#define BF_START_TIMER_INFO(inst)                      ((inst) + 0x00000005), 0x00000800

#define REG_ZERO_FLUSH_TIMER_LSB_ADDR(inst)            ((inst) + 0x00000006)
#define BF_ZERO_FLUSH_TIMER_INFO(inst)                 ((inst) + 0x00000006), 0x00000D00

#define REG_ZERO_FLUSH_TIMER_MSB_ADDR(inst)            ((inst) + 0x00000007)

#define REG_RAMP_DWN_TIMER_VAL_LSB_ADDR(inst)          ((inst) + 0x00000008)
#define BF_RAMP_DWN_TIMER_VAL_INFO(inst)               ((inst) + 0x00000008), 0x00001000

#define REG_RAMP_DWN_TIMER_VAL_MSB_ADDR(inst)          ((inst) + 0x00000009)

#define REG_RAMP_UP_TIMER_VAL_LSB_ADDR(inst)           ((inst) + 0x0000000A)
#define BF_RAMP_UP_TIMER_VAL_INFO(inst)                ((inst) + 0x0000000A), 0x00001000

#define REG_RAMP_UP_TIMER_VAL_MSB_ADDR(inst)           ((inst) + 0x0000000B)

#define REG_SM_STATUS_ADDR(inst)                       ((inst) + 0x0000000C)
#define BF_MAIN_SM_CURRENT_INFO(inst)                  ((inst) + 0x0000000C), 0x00000500
#define BF_CLOCKS_SM_CURRENT_INFO(inst)                ((inst) + 0x0000000C), 0x00000305

#define REG_RAMP_DOWN_COUNT_ADDR(inst)                 ((inst) + 0x0000000D)
#define BF_RAMP_DOWN_COUNT_INFO(inst)                  ((inst) + 0x0000000D), 0x00000800

#define REG_MANUAL_CTRL_ADDR(inst)                     ((inst) + 0x00000021)
#define BF_FORCE_RAMP_DWN_INFO(inst)                   ((inst) + 0x00000021), 0x00000100
#define BF_FORCE_RAMP_DWN_EN_INFO(inst)                ((inst) + 0x00000021), 0x00000101
#define BF_FORCE_RAMP_UP_INFO(inst)                    ((inst) + 0x00000021), 0x00000102
#define BF_FORCE_RAMP_UP_EN_INFO(inst)                 ((inst) + 0x00000021), 0x00000103
#define BF_FORCE_RAMPS_DYN_RECFIG_EN_INFO(inst)        ((inst) + 0x00000021), 0x00000104
#define BF_ZERO_DETECT_EN_INFO(inst)                   ((inst) + 0x00000021), 0x00000105

#define REG_GAIN_INC_STEP_ADDR(inst)                   ((inst) + 0x00000022)
#define BF_GAIN_INC_STEP_INFO(inst)                    ((inst) + 0x00000022), 0x00000800

#define REG_GAIN_DEC_STEP_ADDR(inst)                   ((inst) + 0x0000002A)
#define BF_GAIN_DEC_STEP_INFO(inst)                    ((inst) + 0x0000002A), 0x00000800

#define REG_GAIN_VALUE_ADDR(inst)                      ((inst) + 0x00000032)
#define BF_GAIN_MAX_VAL_INFO(inst)                     ((inst) + 0x00000032), 0x00000800

#define REG_RAMP_CNTRL_ADDR(inst)                      ((inst) + 0x00000033)
#define BF_ENABLE_GAIN_INFO(inst)                      ((inst) + 0x00000033), 0x00000101
#define BF_ENABLE_RAMP_INFO(inst)                      ((inst) + 0x00000033), 0x00000102

#define REG_ZIF_RAMP_CTRL_ADDR(inst)                   ((inst) + 0x00000034)
#define BF_TRIG_RAMP_TOGETHER_INFO(inst)               ((inst) + 0x00000034), 0x00000100

#define REG_SLEW_RATE_CTRL_ADDR(inst)                  ((inst) + 0x00000040)
#define BF_SR_CALCULATION_EN_INFO(inst)                ((inst) + 0x00000040), 0x00000100
#define BF_SR_ERR_SELF_CLR_EN_INFO(inst)               ((inst) + 0x00000040), 0x00000101
#define BF_SR_PATH_SEL_INFO(inst)                      ((inst) + 0x00000040), 0x00000502
#define BF_SR_MANUAL_CLR_INFO(inst)                    ((inst) + 0x00000040), 0x00000107

#define REG_SR_THRESHOLD0_ADDR(inst)                   ((inst) + 0x00000041)
#define BF_SR_THRESHOLD_INFO(inst)                     ((inst) + 0x00000041), 0x00001100

#define REG_SR_THRESHOLD1_ADDR(inst)                   ((inst) + 0x00000042)

#define REG_SR_THRESHOLD2_ADDR(inst)                   ((inst) + 0x00000043)

#define REG_SR_CALCULATED_DATA_LSB_ADDR(inst)          ((inst) + 0x00000044)
#define BF_SR_CALCULATED_INFO(inst)                    ((inst) + 0x00000044), 0x00001100

#define REG_SR_CALCULATED_DATA_ISB_ADDR(inst)          ((inst) + 0x00000045)

#define REG_SR_CALCULATED_DATA_MSB_ADDR(inst)          ((inst) + 0x00000046)
#define BF_SR_DETECTED_ERR_INFO(inst)                  ((inst) + 0x00000046), 0x00000107

#define REG_PAPROT_IRQ_ENABLE_ADDR(inst)               ((inst) + 0x00000060)
#define BF_SLEW_RATE_ERR_IRQ_EN_INFO(inst)             ((inst) + 0x00000060), 0x00000101

#define REG_PAPROT_IRQ_STATUS_ADDR(inst)               ((inst) + 0x00000061)
#define BF_SLEW_RATE_ERR_IRQ_INFO(inst)                ((inst) + 0x00000061), 0x00000101

#define REG_FORCE_CLKS_ADDR(inst)                      ((inst) + 0x00000080)
#ifdef USE_PRIVATE_BF
#define BF_SR_CLK_EN_INFO(inst)                        ((inst) + 0x00000080), 0x00000100
#endif /* USE_PRIVATE_BF */
#define BF_GAIN_CLK_EN_INFO(inst)                      ((inst) + 0x00000080), 0x00000101

#define REG_CLOCK_DIV_EN_ADDR(inst)                    ((inst) + 0x00000081)
#define BF_PA_CLKDIV_EN_INFO(inst)                     ((inst) + 0x00000081), 0x00000100

#endif /* __ADI_APOLLO_BF_TX_PAPROT_H__ */
/*! @} */
