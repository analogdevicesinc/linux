/**
 * \file adi_apollo_mailbox.h
 *
 * \brief   Mailbox Block definition headers
 */

/*
 * \copyright copyright(c) 2021 analog devices, inc. all rights reserved.
 *            This software is proprietary to Analog Devices, Inc. and its
 *            licensor. By using this software you agree to the terms of the
 *            associated analog devices software license agreement.
 */


/*!
 * \addtogroup ADI_APOLLO_MAILBOX
 * @{
 */

#ifndef __ADI_APOLLO_MAILBOX_H__
#define __ADI_APOLLO_MAILBOX_H__

/* WARNING!! This file is autogenerated by build_mailbox.py. Do not edit here */

/*============= I N C L U D E S ============*/
#include "adi_cms_api_common.h"
#include "adi_apollo_mailbox_types.h"

/*============= E X P O R T S ==============*/
#ifdef __cplusplus
extern "C" {
#endif

/**
 * \brief  Ping the CPU
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_ping_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_ping_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_ping(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_ping_t *cmd, adi_apollo_mailbox_resp_ping_t *resp);

/**
 * \brief  Run initial calibrations
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_run_init_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_run_init_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_run_init(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_run_init_t *cmd, adi_apollo_mailbox_resp_run_init_t *resp);

/**
 * \brief  Get the completion status of initial calibrations
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_run_init_get_completion_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_run_init_get_completion(adi_apollo_device_t *device, adi_apollo_mailbox_resp_run_init_get_completion_t *resp);

/**
 * \brief  Get detailed status information on initial calibrations
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_run_init_get_detailed_status_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_run_init_get_detailed_status(adi_apollo_device_t *device, adi_apollo_mailbox_resp_run_init_get_detailed_status_t *resp);

/**
 * \brief  Abort any in progress initial calibrations
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_run_init_abort_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_run_init_abort(adi_apollo_device_t *device, adi_apollo_mailbox_resp_run_init_abort_t *resp);

/**
 * \brief  Set the set of enabled tracking cals
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_set_enabled_tracking_cals_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_set_enabled_tracking_cals_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_set_enabled_tracking_cals(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_set_enabled_tracking_cals_t *cmd, adi_apollo_mailbox_resp_set_enabled_tracking_cals_t *resp);

/**
 * \brief  Get the set of enabled tracking cals
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_enabled_tracking_cals_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_enabled_tracking_cals(adi_apollo_device_t *device, adi_apollo_mailbox_resp_get_enabled_tracking_cals_t *resp);

/**
 * \brief  Get detailed state information for all tracking cals
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_tracking_cal_state_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_tracking_cal_state(adi_apollo_device_t *device, adi_apollo_mailbox_resp_get_tracking_cal_state_t *resp);

/**
 * \brief  Get calibration status information
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_get_cal_status_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_cal_status_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_cal_status(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_get_cal_status_t *cmd, adi_apollo_mailbox_resp_get_cal_status_t *resp);

/**
 * \brief  Get system status information
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_get_sys_status_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_sys_status_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_sys_status(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_get_sys_status_t *cmd, adi_apollo_mailbox_resp_get_sys_status_t *resp);

/**
 * \brief  Get device temperature information
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_get_device_temperature_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_device_temperature_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_device_temperature(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_get_device_temperature_t *cmd, adi_apollo_mailbox_resp_get_device_temperature_t *resp);

/**
 * \brief  Get enabled temp sensors
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_enabled_temp_sensors_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_enabled_temp_sensors(adi_apollo_device_t *device, adi_apollo_mailbox_resp_get_enabled_temp_sensors_t *resp);

/**
 * \brief  Set enabled temp sensors
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_set_enabled_temp_sensors_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_set_enabled_temp_sensors_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_set_enabled_temp_sensors(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_set_enabled_temp_sensors_t *cmd, adi_apollo_mailbox_resp_set_enabled_temp_sensors_t *resp);

/**
 * \brief  Unlock the configuration for changing
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_unlock_config_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_unlock_config_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_unlock_config(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_unlock_config_t *cmd, adi_apollo_mailbox_resp_unlock_config_t *resp);

/**
 * \brief  Set system or calibration configuration
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_set_config_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_set_config_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_set_config(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_set_config_t *cmd, adi_apollo_mailbox_resp_set_config_t *resp);

/**
 * \brief  Get system or calibration configuration
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_get_config_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_config_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_config(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_get_config_t *cmd, adi_apollo_mailbox_resp_get_config_t *resp);

/**
 * \brief  Set system or calibration ctrl
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_set_ctrl_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_set_ctrl_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_set_ctrl(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_set_ctrl_t *cmd, adi_apollo_mailbox_resp_set_ctrl_t *resp);

/**
 * \brief  Enter debug mode
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_enter_debug_mode_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_enter_debug_mode_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_enter_debug_mode(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_enter_debug_mode_t *cmd, adi_apollo_mailbox_resp_enter_debug_mode_t *resp);

/**
 * \brief  Generic debug command
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_debug_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_debug_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_debug(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_debug_t *cmd, adi_apollo_mailbox_resp_debug_t *resp);

/**
 * \brief  Set CPU log filters
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_set_log_filters_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_set_log_filters_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_set_log_filters(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_set_log_filters_t *cmd, adi_apollo_mailbox_resp_set_log_filters_t *resp);

/**
 * \brief  Resume task(s) suspended due to breakpoint
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_resume_bkpt_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_resume_bkpt_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_resume_bkpt(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_resume_bkpt_t *cmd, adi_apollo_mailbox_resp_resume_bkpt_t *resp);

/**
 * \brief  Run SERDES eye sweep
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_run_serdes_eye_sweep_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_run_serdes_eye_sweep_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_run_serdes_eye_sweep(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_run_serdes_eye_sweep_t *cmd, adi_apollo_mailbox_resp_run_serdes_eye_sweep_t *resp);

/**
 * \brief  Run SERDES vertical eye sweep
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_run_serdes_vert_eye_sweep_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_run_serdes_vert_eye_sweep_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_run_serdes_vert_eye_sweep(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_run_serdes_vert_eye_sweep_t *cmd, adi_apollo_mailbox_resp_run_serdes_vert_eye_sweep_t *resp);

/**
 * \brief  Set GPIO pin configuration
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_set_gpio_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_set_gpio_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_set_gpio(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_set_gpio_t *cmd, adi_apollo_mailbox_resp_set_gpio_t *resp);

/**
 * \brief  Get GPIO pin configuration
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_get_gpio_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_gpio_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_gpio(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_get_gpio_t *cmd, adi_apollo_mailbox_resp_get_gpio_t *resp);

/**
 * \brief  MBIAS pre clock init
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_mbias_pre_clock_init_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_mbias_pre_clock_init(adi_apollo_device_t *device, adi_apollo_mailbox_resp_mbias_pre_clock_init_t *resp);

/**
 * \brief  MBIAS post clock init
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_mbias_post_clock_init_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_mbias_post_clock_init(adi_apollo_device_t *device, adi_apollo_mailbox_resp_mbias_post_clock_init_t *resp);

/**
 * \brief  sysclk configuration
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_sysclk_configuration_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_sysclk_configuration(adi_apollo_device_t *device, adi_apollo_mailbox_resp_sysclk_configuration_t *resp);

/**
 * \brief  sysclk conditioning
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_sysclk_conditioning_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_sysclk_conditioning_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_sysclk_conditioning(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_sysclk_conditioning_t *cmd, adi_apollo_mailbox_resp_sysclk_conditioning_t *resp);

/**
 * \brief  sysclk switch from ring oscillator
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_sysclk_switch_to_hsdig_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_sysclk_switch_to_hsdig(adi_apollo_device_t *device, adi_apollo_mailbox_resp_sysclk_switch_to_hsdig_t *resp);

/**
 * \brief  Set DAC Bias
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_master_bias_set_dac_bias_mode_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_master_bias_set_dac_bias_mode_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_master_bias_set_dac_bias_mode(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_master_bias_set_dac_bias_mode_t *cmd, adi_apollo_mailbox_resp_master_bias_set_dac_bias_mode_t *resp);

/**
 * \brief  sysclk switch to ring oscillator
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_sysclk_switch_to_ringosc_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_sysclk_switch_to_ringosc(adi_apollo_device_t *device, adi_apollo_mailbox_resp_sysclk_switch_to_ringosc_t *resp);

/**
 * \brief  program pll
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_pgm_pll_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_pgm_pll_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_pgm_pll(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_pgm_pll_t *cmd, adi_apollo_mailbox_resp_pgm_pll_t *resp);

/**
 * \brief  Update CRC for all calibration data
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_update_cal_data_crc_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_update_cal_data_crc(adi_apollo_device_t *device, adi_apollo_mailbox_resp_update_cal_data_crc_t *resp);

/**
 * \brief  Gets the firmware version information
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_fw_version_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_fw_version(adi_apollo_device_t *device, adi_apollo_mailbox_resp_get_fw_version_t *resp);

/**
 * \brief  Request challenge
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_request_challenge_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_request_challenge_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_request_challenge(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_request_challenge_t *cmd, adi_apollo_mailbox_resp_request_challenge_t *resp);

/**
 * \brief  Set challenge
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_set_challenge_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_set_challenge_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_set_challenge(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_set_challenge_t *cmd, adi_apollo_mailbox_resp_set_challenge_t *resp);

/**
 * \brief  Power up JTx
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_power_up_jtx_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_power_up_jtx(adi_apollo_device_t *device, adi_apollo_mailbox_resp_power_up_jtx_t *resp);

/**
 * \brief  Set configuration by user
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_mcs_bsync_set_config_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_mcs_bsync_set_config_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_mcs_bsync_set_config(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_mcs_bsync_set_config_t *cmd, adi_apollo_mailbox_resp_mcs_bsync_set_config_t *resp);

/**
 * \brief  Get configuration by user
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_mcs_bsync_get_config_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_mcs_bsync_get_config(adi_apollo_device_t *device, adi_apollo_mailbox_resp_mcs_bsync_get_config_t *resp);

/**
 * \brief  Start the BSYNC synchornization process
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_mcs_bsync_go_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_mcs_bsync_go(adi_apollo_device_t *device, adi_apollo_mailbox_resp_mcs_bsync_go_t *resp);

/**
 * \brief  Gets the ADC slice modes
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_get_adc_slice_modes_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_get_adc_slice_modes(adi_apollo_device_t *device, adi_apollo_mailbox_resp_get_adc_slice_modes_t *resp);

/**
 * \brief  Set the action of ADC slice mode fast switch
 *
 * \param[in]  device              Context variable - Pointer to the APOLLO device data structure
 * \param[in]  cmd                 Parameters for target. See \ref adi_apollo_mailbox_cmd_set_adc_slice_mode_fast_switch_action_t
 * \param[out] resp               Parameters from target. See \ref adi_apollo_mailbox_resp_set_adc_slice_mode_fast_switch_action_t
 *
 * \return API_CMS_ERROR_OK    API Completed Successfully
 * \return <0                  Failed. \ref adi_cms_error_e for details.
 */
int32_t adi_apollo_mailbox_set_adc_slice_mode_fast_switch_action(adi_apollo_device_t *device, adi_apollo_mailbox_cmd_set_adc_slice_mode_fast_switch_action_t *cmd, adi_apollo_mailbox_resp_set_adc_slice_mode_fast_switch_action_t *resp);


#ifdef __cplusplus
}
#endif

#endif /* __ADI_APOLLO_MAILBOX_H__ */
/*! @} */
