// SPDX-License-Identifier: GPL-2.0
// -----------------------------------------------------------------------------
// Comcores ApS (R) all rights reserved.
//
// *****************************************************************************
/******************************************************************************/
/*                                DO NOT MODIFY                               */
/*           THIS FILE IS AUTOGENERATED AND ALL CHANGES WILL BE LOST          */
/******************************************************************************/
#ifndef _MACSEC_TOP_STATISTICS_MEMMAP_H_
#define _MACSEC_TOP_STATISTICS_MEMMAP_H_

/* General Port and SecY Statistics */
#define STATISTICS_BASE_ADDR                                                                                  0x00000200
#define STATISTICS_STRIDE                                                                                     0x00000100
/******************************************************************************/
/* Control and status indicator for configuration insert */
#define STATISTICS_STATS_CTRL_BASE_ADDR                                                                       0x00000000
/* RX_STATS_RD_TRIGGER W1C Select Frame Verification and Validation statistics registers */
#define STATISTICS_STATS_CTRL_RX_STATS_RD_TRIGGER_MASK                                                        0x00001000
#define STATISTICS_STATS_CTRL_RX_STATS_RD_TRIGGER_SHIFT                                                               12

/* TX_STATS_RD_TRIGGER W1C Select Frame Generation and Protection statistics registers */
#define STATISTICS_STATS_CTRL_TX_STATS_RD_TRIGGER_MASK                                                        0x00000800
#define STATISTICS_STATS_CTRL_TX_STATS_RD_TRIGGER_SHIFT                                                               11

/* PORT_STATS_RD_TRIGGER W1C Select Port Statistics registers; Port Statistics to support IETF RFC 2863 interface MIB
 * Counters */
#define STATISTICS_STATS_CTRL_PORT_STATS_RD_TRIGGER_MASK                                                      0x00000400
#define STATISTICS_STATS_CTRL_PORT_STATS_RD_TRIGGER_SHIFT                                                             10

/* PEER_INDEX RW Index number of secy table to read/write peer SCI */
#define STATISTICS_STATS_CTRL_PEER_INDEX_MASK                                                                 0x000003f0
#define STATISTICS_STATS_CTRL_PEER_INDEX_SHIFT                                                                         4

/* SECY_INDEX RW Index number of SecY to read/write */
#define STATISTICS_STATS_CTRL_SECY_INDEX_MASK                                                                 0x0000000f
#define STATISTICS_STATS_CTRL_SECY_INDEX_SHIFT                                                                         0

/******************************************************************************/
/* Controlled Port Statistics register:
 * The ifInOctets count is the sum of all the octets of the MSDUs delivered to the user of the Controlled Port by
 * the Secure Frame Verification process (10.6), plus the octets of the destination and source MAC addresses. */
#define STATISTICS_PS_CP_IFINOCTETS_BASE_ADDR                                                                 0x00000004
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFINOCTETS_VAL_MASK                                                                  0xffffffff
#define STATISTICS_PS_CP_IFINOCTETS_VAL_SHIFT                                                                          0

/******************************************************************************/
/* Controlled Port Statistics register: The ifinucastpkts count is the number of unicast packets based on destination
 * MAC address. */
#define STATISTICS_PS_CP_IFINUCASTPKTS_BASE_ADDR                                                              0x00000008
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFINUCASTPKTS_VAL_MASK                                                               0xffffffff
#define STATISTICS_PS_CP_IFINUCASTPKTS_VAL_SHIFT                                                                       0

/******************************************************************************/
/* Controlled Port Statistics register: The ifinmulticastpkts count is the number of multicast packets based on
 * destination MAC address. */
#define STATISTICS_PS_CP_IFINMULTICASTPKTS_BASE_ADDR                                                          0x0000000c
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFINMULTICASTPKTS_VAL_MASK                                                           0xffffffff
#define STATISTICS_PS_CP_IFINMULTICASTPKTS_VAL_SHIFT                                                                   0

/******************************************************************************/
/* Controlled Port Statistics register: The ifinbroadcastpkts count is the number of broadcast packets based on
 * destination MAC address. */
#define STATISTICS_PS_CP_IFINBROADCASTPKTS_BASE_ADDR                                                          0x00000010
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFINBROADCASTPKTS_VAL_MASK                                                           0xffffffff
#define STATISTICS_PS_CP_IFINBROADCASTPKTS_VAL_SHIFT                                                                   0

/******************************************************************************/
/* Controlled Port Statistics register: The ifInDiscards count is the sum of all the InPktsNoTag, InPktsLate, and
 * InPktsOverrun counts. */
#define STATISTICS_PS_CP_IFINDISCARDS_BASE_ADDR                                                               0x00000014
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFINDISCARDS_VAL_MASK                                                                0xffffffff
#define STATISTICS_PS_CP_IFINDISCARDS_VAL_SHIFT                                                                        0

/******************************************************************************/
/* Controlled Port Statistics register: The ifInErrors count is the sum of all the InPktsBadTag, InPktsNoSA, and
 * InPktsNotValid counts (10.6). */
#define STATISTICS_PS_CP_IFINERRORS_BASE_ADDR                                                                 0x00000018
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFINERRORS_VAL_MASK                                                                  0xffffffff
#define STATISTICS_PS_CP_IFINERRORS_VAL_SHIFT                                                                          0

/******************************************************************************/
/* Controlled Port Statistics register: The ifOutOctets count is the sum of the all octets of the MSDUs delivered by the
 * user of the Controlled
 * Port to the Secure Frame Generation process (10.5), plus the octets of the destination and source MAC addresses. */
#define STATISTICS_PS_CP_IFOUTOCTETS_BASE_ADDR                                                                0x0000001c
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFOUTOCTETS_VAL_MASK                                                                 0xffffffff
#define STATISTICS_PS_CP_IFOUTOCTETS_VAL_SHIFT                                                                         0

/******************************************************************************/
/* Controlled Port Statistics register: The ifoutucastpkts count is the number of unicast packets based on destination
 * MAC address. */
#define STATISTICS_PS_CP_IFOUTUCASTPKTS_BASE_ADDR                                                             0x00000020
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFOUTUCASTPKTS_VAL_MASK                                                              0xffffffff
#define STATISTICS_PS_CP_IFOUTUCASTPKTS_VAL_SHIFT                                                                      0

/******************************************************************************/
/* Controlled Port Statistics register: The ifoutmulticastpkts count is the number of multicast packets based on
 * destination MAC address. */
#define STATISTICS_PS_CP_IFOUTMULTICASTPKTS_BASE_ADDR                                                         0x00000024
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFOUTMULTICASTPKTS_VAL_MASK                                                          0xffffffff
#define STATISTICS_PS_CP_IFOUTMULTICASTPKTS_VAL_SHIFT                                                                  0

/******************************************************************************/
/* Controlled Port Statistics register: The ifoutbroadcastpkts count is the number of broadcast packets based on
 * destination MAC address. */
#define STATISTICS_PS_CP_IFOUTBROADCASTPKTS_BASE_ADDR                                                         0x00000028
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFOUTBROADCASTPKTS_VAL_MASK                                                          0xffffffff
#define STATISTICS_PS_CP_IFOUTBROADCASTPKTS_VAL_SHIFT                                                                  0

/******************************************************************************/
/* Controlled Port Statistics register: The ifOutErrors count is equal to the number packets that could not be
 * proccessed due to not Tx_SA InUse. */
#define STATISTICS_PS_CP_IFOUTERRORS_BASE_ADDR                                                                0x0000002c
/* VAL RO ---- */
#define STATISTICS_PS_CP_IFOUTERRORS_VAL_MASK                                                                 0xffffffff
#define STATISTICS_PS_CP_IFOUTERRORS_VAL_SHIFT                                                                         0

/******************************************************************************/
/* TX Port Statistics register: If the management control protectFrames is False, the preceding steps are omitted,
 * an identical transmit request is made to the Transmit Multiplexer, and the OutPktsUntagged counter incremented. */
#define STATISTICS_PS_CP_TX_OUTPKTSUNTAGGED_BASE_ADDR                                                         0x00000030
/* VAL RO ---- */
#define STATISTICS_PS_CP_TX_OUTPKTSUNTAGGED_VAL_MASK                                                          0xffffffff
#define STATISTICS_PS_CP_TX_OUTPKTSUNTAGGED_VAL_SHIFT                                                                  0

/******************************************************************************/
/* TX Port Statistics register: If size of frame to be transmitted is greater than the configured max_frame_length value
 * then the frame is dropped
 * and outpktstoolong counter increaments. */
#define STATISTICS_PS_CP_TX_OUTPKTSTOOLONG_BASE_ADDR                                                          0x00000034
/* VAL RO ---- */
#define STATISTICS_PS_CP_TX_OUTPKTSTOOLONG_VAL_MASK                                                           0xffffffff
#define STATISTICS_PS_CP_TX_OUTPKTSTOOLONG_VAL_SHIFT                                                                   0

/******************************************************************************/
/* TX Port Statistics register: Number of octets of User Data in transmitted frames that were integrity protected but
 * not encrypted */
#define STATISTICS_PS_CP_TX_OUTOCTETSPROTECTED_BASE_ADDR                                                      0x00000038
/* VAL RO ---- */
#define STATISTICS_PS_CP_TX_OUTOCTETSPROTECTED_VAL_MASK                                                       0xffffffff
#define STATISTICS_PS_CP_TX_OUTOCTETSPROTECTED_VAL_SHIFT                                                               0

/******************************************************************************/
/* TX Port Statistics register: Number of octets of User Data in transmitted frames that were both integrity protected
 * and encrypted */
#define STATISTICS_PS_CP_TX_OUTOCTETSENCRYPTED_BASE_ADDR                                                      0x0000003c
/* VAL RO ---- */
#define STATISTICS_PS_CP_TX_OUTOCTETSENCRYPTED_VAL_MASK                                                       0xffffffff
#define STATISTICS_PS_CP_TX_OUTOCTETSENCRYPTED_VAL_SHIFT                                                               0

/******************************************************************************/
/* TX Port Statistics register: Counts when the packets for a given SA are all only integrity protected. */
#define STATISTICS_PS_CP_TX_OUTPKTSPROTECTED_BASE_ADDR                                                        0x00000040
/* VAL RO ---- */
#define STATISTICS_PS_CP_TX_OUTPKTSPROTECTED_VAL_MASK                                                         0xffffffff
#define STATISTICS_PS_CP_TX_OUTPKTSPROTECTED_VAL_SHIFT                                                                 0

/******************************************************************************/
/* TX Port Statistics register: Counts when the packets for a given SA are all encrypted (confidentiality protected). */
#define STATISTICS_PS_CP_TX_OUTPKTSENCRYPTED_BASE_ADDR                                                        0x00000044
/* VAL RO ---- */
#define STATISTICS_PS_CP_TX_OUTPKTSENCRYPTED_VAL_MASK                                                         0xffffffff
#define STATISTICS_PS_CP_TX_OUTPKTSENCRYPTED_VAL_SHIFT                                                                 0

/******************************************************************************/
/* RX Port Statistics register: if there is no sec tag when macsec frame is expected
 * then the frame is dropped and inpktsuntagged counter increments. */
#define STATISTICS_PS_CP_RX_INPKTSUNTAGGED_BASE_ADDR                                                          0x00000048
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSUNTAGGED_VAL_MASK                                                           0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSUNTAGGED_VAL_SHIFT                                                                   0

/******************************************************************************/
/* RX Port Statistics register: if there is no sec tag when macsec frame is expected and validate frame is under strict
 * validation
 * then the frame is dropped and inpktsnotag counter increments. */
#define STATISTICS_PS_CP_RX_INPKTSNOTAG_BASE_ADDR                                                             0x0000004c
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSNOTAG_VAL_MASK                                                              0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSNOTAG_VAL_SHIFT                                                                      0

/******************************************************************************/
/* RX Port Statistics register: if the received frame have invalid frame with wrong sectag encoding (Table 10-1)
 * then the frame is dropped and inpktsbadtag counter increments. */
#define STATISTICS_PS_CP_RX_INPKTSBADTAG_BASE_ADDR                                                            0x00000050
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSBADTAG_VAL_MASK                                                             0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSBADTAG_VAL_SHIFT                                                                     0

/******************************************************************************/
/* RX Port Statistics register: if InPktsNoSAError is not true then InPktsNoSA counter increments. */
#define STATISTICS_PS_CP_RX_INPKTSNOSA_BASE_ADDR                                                              0x00000054
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSNOSA_VAL_MASK                                                               0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSNOSA_VAL_SHIFT                                                                       0

/******************************************************************************/
/* RX Port Statistics register: If the SC is not found, the received SCI may be recorded to assist network management
 * resolution of the problem,
 * and If validateFrames is Strict or the C bit in the SecTAG is set, the InPktsNoSAError counter is incremented and the
 * frame is discarded.
 * OR
 * If the receive SC has been identified, the frame's AN is used to locate the receive SA received frame and processing
 * continues with the preliminary
 * replay check and if validateFrames is Strict or the C bit is set, the frame is discarded and the InPktsNoSAError
 * counter incremented; */
#define STATISTICS_PS_CP_RX_INPKTSNOSAERROR_BASE_ADDR                                                         0x00000058
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSNOSAERROR_VAL_MASK                                                          0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSNOSAERROR_VAL_SHIFT                                                                  0

/******************************************************************************/
/* RX Port Statistics register: counts of InPktsOverrun can be maintained by counting packates that have been discarded
 * due to inability to validate
 * frames at the received rate, and by accumulation of the counts InOctetsValidated and InOctetsDecrypted. */
#define STATISTICS_PS_CP_RX_INPKTSOVERRUN_BASE_ADDR                                                           0x0000005c
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSOVERRUN_VAL_MASK                                                            0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSOVERRUN_VAL_SHIFT                                                                    0

/******************************************************************************/
/* RX Port Statistics register: Number of octets of User Data recovered from received frames that were integrity
 * protected but not encrypted */
#define STATISTICS_PS_CP_RX_INOCTETSVALIDATED_BASE_ADDR                                                       0x00000060
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INOCTETSVALIDATED_VAL_MASK                                                        0xffffffff
#define STATISTICS_PS_CP_RX_INOCTETSVALIDATED_VAL_SHIFT                                                                0

/******************************************************************************/
/* RX Port Statistics register: Number of octets of User Data recovered from received frames that were both integrity
 * protected and encrypted */
#define STATISTICS_PS_CP_RX_INOCTETSDECRYPTED_BASE_ADDR                                                       0x00000064
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INOCTETSDECRYPTED_VAL_MASK                                                        0xffffffff
#define STATISTICS_PS_CP_RX_INOCTETSDECRYPTED_VAL_SHIFT                                                                0

/******************************************************************************/
/* RX Port Statistics register: if InPktsUnchecked, InPktsDelayed, InPktsInvalid and InPktsNotValid conditions are false
 * then InPktsOK counts */
#define STATISTICS_PS_CP_RX_INPKTSOK_BASE_ADDR                                                                0x00000068
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSOK_VAL_MASK                                                                 0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSOK_VAL_SHIFT                                                                         0

/******************************************************************************/
/* RX Port Statistics register: If the frame is not valid, InPktsUnchecked counts. */
#define STATISTICS_PS_CP_RX_INPKTSUNCHECKED_BASE_ADDR                                                         0x0000006c
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSUNCHECKED_VAL_MASK                                                          0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSUNCHECKED_VAL_SHIFT                                                                  0

/******************************************************************************/
/* RX Port Statistics register: If the received PN is less than the lowest acceptable PN
 * (treating a 32-bit PN value of zero as 232 and a 64-bit PN value of zero as 264), InPktsDelayed counts. */
#define STATISTICS_PS_CP_RX_INPKTSDELAYED_BASE_ADDR                                                           0x00000070
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSDELAYED_VAL_MASK                                                            0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSDELAYED_VAL_SHIFT                                                                    0

/******************************************************************************/
/* RX Port Statistics register: If replayProtect control is enabled and the PN recovered from the received frame is less
 * than
 * the lowest acceptable packet number (see 10.6.5) for the SA, the frame is discarded and the InPktsLate counter
 * incremented. */
#define STATISTICS_PS_CP_RX_INPKTSLATE_BASE_ADDR                                                              0x00000074
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSLATE_VAL_MASK                                                               0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSLATE_VAL_SHIFT                                                                       0

/******************************************************************************/
/* RX Port Statistics register: If the frame is not valid and validateFrames is set to Check, then InPktsInvalid counts. */
#define STATISTICS_PS_CP_RX_INPKTSINVALID_BASE_ADDR                                                           0x00000078
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSINVALID_VAL_MASK                                                            0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSINVALID_VAL_SHIFT                                                                    0

/******************************************************************************/
/* RX Port Statistics register: If the received frame is marked as invalid, and the validateFrames control is Strict
 * or the C bit in the SecTAG was set, the frame is discarded and the InPktsNotValid counter incremented. */
#define STATISTICS_PS_CP_RX_INPKTSNOTVALID_BASE_ADDR                                                          0x0000007c
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_INPKTSNOTVALID_VAL_MASK                                                           0xffffffff
#define STATISTICS_PS_CP_RX_INPKTSNOTVALID_VAL_SHIFT                                                                   0

/******************************************************************************/
/* Controlled Port Statistics register: The ifInOctets count is the sum of all the octets of the MSDUs delivered to the
 * user of the Controlled Port
 * by the Secure Frame Verification process (10.6), plus the octets of the destination and source MAC addresses. */
#define STATISTICS_PS_UP_IFINOCTETS_BASE_ADDR                                                                 0x00000080
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFINOCTETS_VAL_MASK                                                                  0xffffffff
#define STATISTICS_PS_UP_IFINOCTETS_VAL_SHIFT                                                                          0

/******************************************************************************/
/* Controlled Port Statistics register: The ifinucastpkts count is the number of unicast packets based on destination
 * MAC address. */
#define STATISTICS_PS_UP_IFINUCASTPKTS_BASE_ADDR                                                              0x00000084
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFINUCASTPKTS_VAL_MASK                                                               0xffffffff
#define STATISTICS_PS_UP_IFINUCASTPKTS_VAL_SHIFT                                                                       0

/******************************************************************************/
/* Controlled Port Statistics register: The ifinmulticastpkts count is the number of multicast packets based on
 * destination MAC address. */
#define STATISTICS_PS_UP_IFINMULTICASTPKTS_BASE_ADDR                                                          0x00000088
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFINMULTICASTPKTS_VAL_MASK                                                           0xffffffff
#define STATISTICS_PS_UP_IFINMULTICASTPKTS_VAL_SHIFT                                                                   0

/******************************************************************************/
/* Controlled Port Statistics register: The ifinbroadcastpkts count is the number of broadcast packets based on
 * destination MAC address. */
#define STATISTICS_PS_UP_IFINBROADCASTPKTS_BASE_ADDR                                                          0x0000008c
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFINBROADCASTPKTS_VAL_MASK                                                           0xffffffff
#define STATISTICS_PS_UP_IFINBROADCASTPKTS_VAL_SHIFT                                                                   0

/******************************************************************************/
/* The ifInDiscards counts are zero, as the operation of the Uncontrolled Port provides no occasion to discard packets. */
#define STATISTICS_PS_UP_IFINDISCARDS_BASE_ADDR                                                               0x00000090
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFINDISCARDS_VAL_MASK                                                                0xffffffff
#define STATISTICS_PS_UP_IFINDISCARDS_VAL_SHIFT                                                                        0

/******************************************************************************/
/* The ifInErrors counts are zero, as the operation of the Uncontrolled Port provides no error checking. */
#define STATISTICS_PS_UP_IFINERRORS_BASE_ADDR                                                                 0x00000094
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFINERRORS_VAL_MASK                                                                  0xffffffff
#define STATISTICS_PS_UP_IFINERRORS_VAL_SHIFT                                                                          0

/******************************************************************************/
/* Uncontrolled Port Statistics register: The ifOutOctets count is the sum of the all octets of the MSDUs delivered by
 * the user of the Controlled Port
 * to the Secure Frame Generation process (10.5), plus the octets of the destination and source MAC addresses. */
#define STATISTICS_PS_UP_IFOUTOCTETS_BASE_ADDR                                                                0x00000098
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFOUTOCTETS_VAL_MASK                                                                 0xffffffff
#define STATISTICS_PS_UP_IFOUTOCTETS_VAL_SHIFT                                                                         0

/******************************************************************************/
/* Uncontrolled Port Statistics register: The ifoutucastpkts count is the number of unicast packets based on destination
 * MAC address. */
#define STATISTICS_PS_UP_IFOUTUCASTPKTS_BASE_ADDR                                                             0x0000009c
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFOUTUCASTPKTS_VAL_MASK                                                              0xffffffff
#define STATISTICS_PS_UP_IFOUTUCASTPKTS_VAL_SHIFT                                                                      0

/******************************************************************************/
/* Uncontrolled Port Statistics register: The ifoutmulticastpkts count is the number of multicast packets based on
 * destination MAC address. */
#define STATISTICS_PS_UP_IFOUTMULTICASTPKTS_BASE_ADDR                                                         0x000000a0
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFOUTMULTICASTPKTS_VAL_MASK                                                          0xffffffff
#define STATISTICS_PS_UP_IFOUTMULTICASTPKTS_VAL_SHIFT                                                                  0

/******************************************************************************/
/* Uncontrolled Port Statistics register: The ifoutbroadcastpkts count is the number of broadcast packets based on
 * destination MAC address. */
#define STATISTICS_PS_UP_IFOUTBROADCASTPKTS_BASE_ADDR                                                         0x000000a4
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFOUTBROADCASTPKTS_VAL_MASK                                                          0xffffffff
#define STATISTICS_PS_UP_IFOUTBROADCASTPKTS_VAL_SHIFT                                                                  0

/******************************************************************************/
/* The ifOutErrors count is zero, as no checking is applied to frames transmitted by the Uncontrolled Port. */
#define STATISTICS_PS_UP_IFOUTERRORS_BASE_ADDR                                                                0x000000a8
/* VAL RO ---- */
#define STATISTICS_PS_UP_IFOUTERRORS_VAL_MASK                                                                 0xffffffff
#define STATISTICS_PS_UP_IFOUTERRORS_VAL_SHIFT                                                                         0

/******************************************************************************/
/* Additional Port Statistics register: If common port is disabled then the counter increments. */
#define STATISTICS_PS_COMP_TX_DISABLE_BASE_ADDR                                                               0x000000ac
/* VAL RO ---- */
#define STATISTICS_PS_COMP_TX_DISABLE_VAL_MASK                                                                0xffffffff
#define STATISTICS_PS_COMP_TX_DISABLE_VAL_SHIFT                                                                        0

/******************************************************************************/
/* Additional Port Statistics register: If common port is disabled then the counter increments. */
#define STATISTICS_PS_COMP_RX_DISABLE_BASE_ADDR                                                               0x000000b0
/* VAL RO ---- */
#define STATISTICS_PS_COMP_RX_DISABLE_VAL_MASK                                                                0xffffffff
#define STATISTICS_PS_COMP_RX_DISABLE_VAL_SHIFT                                                                        0

/******************************************************************************/
/* Additional Port Statistics register: If common port is enabled but control port is disabled then the counter
 * increments. */
#define STATISTICS_PS_CP_TX_SECYDISABLE_BASE_ADDR                                                             0x000000b4
/* VAL RO ---- */
#define STATISTICS_PS_CP_TX_SECYDISABLE_VAL_MASK                                                              0xffffffff
#define STATISTICS_PS_CP_TX_SECYDISABLE_VAL_SHIFT                                                                      0

/******************************************************************************/
/* Additional Port Statistics register: If common port is enabled but control port is disabled then the counter
 * increments. */
#define STATISTICS_PS_CP_RX_SECYDISABLE_BASE_ADDR                                                             0x000000b8
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_SECYDISABLE_VAL_MASK                                                              0xffffffff
#define STATISTICS_PS_CP_RX_SECYDISABLE_VAL_SHIFT                                                                      0

/******************************************************************************/
/* Additional Port Statistics register : If common port is enabled but reception is disabled then the counter
 * increments. */
#define STATISTICS_PS_CP_TX_RECEIVINGDISABLE_BASE_ADDR                                                        0x000000bc
/* VAL RO ---- */
#define STATISTICS_PS_CP_TX_RECEIVINGDISABLE_VAL_MASK                                                         0xffffffff
#define STATISTICS_PS_CP_TX_RECEIVINGDISABLE_VAL_SHIFT                                                                 0

/******************************************************************************/
/* Additional Port Statistics register: If common port is enabled but transmission is disabled then the counter
 * increments. */
#define STATISTICS_PS_CP_RX_TRANSMITTINGDISABLE_BASE_ADDR                                                     0x000000c0
/* VAL RO ---- */
#define STATISTICS_PS_CP_RX_TRANSMITTINGDISABLE_VAL_MASK                                                      0xffffffff
#define STATISTICS_PS_CP_RX_TRANSMITTINGDISABLE_VAL_SHIFT                                                              0

#endif /* _MACSEC_TOP_STATISTICS_MEMMAP_H_ */
