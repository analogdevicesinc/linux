[
    {
        "BriefDescription": "Counts the number of cycles when any of the dividers are active.",
        "CounterMask": "1",
        "EventCode": "0xcd",
        "EventName": "ARITH.DIV_ACTIVE",
        "SampleAfterValue": "1000003",
        "UMask": "0x3"
    },
    {
        "BriefDescription": "Counts the total number of branch instructions retired for all branch types.",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.ALL_BRANCHES",
        "PEBS": "1",
        "PublicDescription": "Counts the total number of instructions in which the instruction pointer (IP) of the processor is resteered due to a branch instruction and the branch instruction successfully retires.  All branch type instructions are accounted for.",
        "SampleAfterValue": "200003"
    },
    {
        "BriefDescription": "Counts the number of retired JCC (Jump on Conditional Code) branch instructions retired, includes both taken and not taken branches.",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.COND",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0x7e"
    },
    {
        "BriefDescription": "Counts the number of taken JCC (Jump on Conditional Code) branch instructions retired.",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.COND_TAKEN",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xfe"
    },
    {
        "BriefDescription": "Counts the number of far branch instructions retired, includes far jump, far call and return, and interrupt call and return.",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.FAR_BRANCH",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xbf"
    },
    {
        "BriefDescription": "Counts the number of near indirect JMP and near indirect CALL branch instructions retired.",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.INDIRECT",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xeb"
    },
    {
        "BriefDescription": "Counts the number of near indirect CALL branch instructions retired.",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.INDIRECT_CALL",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xfb"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_INST_RETIRED.INDIRECT_CALL",
        "Deprecated": "1",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.IND_CALL",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xfb"
    },
    {
        "BriefDescription": "Counts the number of near CALL branch instructions retired.",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.NEAR_CALL",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xf9"
    },
    {
        "BriefDescription": "Counts the number of near RET branch instructions retired.",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.NEAR_RETURN",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xf7"
    },
    {
        "BriefDescription": "Counts the total number of mispredicted branch instructions retired for all branch types.",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.ALL_BRANCHES",
        "PEBS": "1",
        "PublicDescription": "Counts the total number of mispredicted branch instructions retired.  All branch type instructions are accounted for.  Prediction of the branch target address enables the processor to begin executing instructions before the non-speculative execution path is known. The branch prediction unit (BPU) predicts the target address based on the instruction pointer (IP) of the branch and on the execution path through which execution reached this IP.    A branch misprediction occurs when the prediction is wrong, and results in discarding all instructions executed in the speculative path and re-fetching from the correct path.",
        "SampleAfterValue": "200003"
    },
    {
        "BriefDescription": "Counts the number of mispredicted JCC (Jump on Conditional Code) branch instructions retired.",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.COND",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0x7e"
    },
    {
        "BriefDescription": "Counts the number of mispredicted taken JCC (Jump on Conditional Code) branch instructions retired.",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.COND_TAKEN",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xfe"
    },
    {
        "BriefDescription": "Counts the number of mispredicted near indirect JMP and near indirect CALL branch instructions retired.",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.INDIRECT",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xeb"
    },
    {
        "BriefDescription": "Counts the number of mispredicted near indirect CALL branch instructions retired.",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.INDIRECT_CALL",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xfb"
    },
    {
        "BriefDescription": "Counts the number of mispredicted near taken branch instructions retired.",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.NEAR_TAKEN",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0x80"
    },
    {
        "BriefDescription": "Counts the number of mispredicted near RET branch instructions retired.",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.RETURN",
        "PEBS": "1",
        "SampleAfterValue": "200003",
        "UMask": "0xf7"
    },
    {
        "BriefDescription": "Fixed Counter: Counts the number of unhalted core clock cycles",
        "EventName": "CPU_CLK_UNHALTED.CORE",
        "SampleAfterValue": "2000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of unhalted core clock cycles [This event is alias to CPU_CLK_UNHALTED.THREAD_P]",
        "EventCode": "0x3c",
        "EventName": "CPU_CLK_UNHALTED.CORE_P",
        "SampleAfterValue": "2000003"
    },
    {
        "BriefDescription": "Fixed Counter: Counts the number of unhalted reference clock cycles",
        "EventName": "CPU_CLK_UNHALTED.REF_TSC",
        "SampleAfterValue": "2000003",
        "UMask": "0x3"
    },
    {
        "BriefDescription": "Counts the number of unhalted reference clock cycles at TSC frequency.",
        "EventCode": "0x3c",
        "EventName": "CPU_CLK_UNHALTED.REF_TSC_P",
        "PublicDescription": "Counts the number of reference cycles that the core is not in a halt state. The core enters the halt state when it is running the HLT instruction. This event is not affected by core frequency changes and increments at a fixed frequency that is also used for the Time Stamp Counter (TSC). This event uses a programmable general purpose performance counter.",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Fixed Counter: Counts the number of unhalted core clock cycles",
        "EventName": "CPU_CLK_UNHALTED.THREAD",
        "SampleAfterValue": "2000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of unhalted core clock cycles [This event is alias to CPU_CLK_UNHALTED.CORE_P]",
        "EventCode": "0x3c",
        "EventName": "CPU_CLK_UNHALTED.THREAD_P",
        "SampleAfterValue": "2000003"
    },
    {
        "BriefDescription": "Fixed Counter: Counts the number of instructions retired",
        "EventName": "INST_RETIRED.ANY",
        "PEBS": "1",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of instructions retired",
        "EventCode": "0xc0",
        "EventName": "INST_RETIRED.ANY_P",
        "PEBS": "1",
        "SampleAfterValue": "2000003"
    },
    {
        "BriefDescription": "Counts the number of retired loads that are blocked because it initially appears to be store forward blocked, but subsequently is shown not to be blocked based on 4K alias check.",
        "EventCode": "0x03",
        "EventName": "LD_BLOCKS.ADDRESS_ALIAS",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the number of retired loads that are blocked because its address exactly matches an older store whose data is not ready.",
        "EventCode": "0x03",
        "EventName": "LD_BLOCKS.DATA_UNKNOWN",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of retired loads that are blocked because its address partially overlapped with an older store.",
        "EventCode": "0x03",
        "EventName": "LD_BLOCKS.STORE_FORWARD",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of machine clears due to memory ordering in which an internal load passes an older store within the same CPU.",
        "EventCode": "0xc3",
        "EventName": "MACHINE_CLEARS.DISAMBIGUATION",
        "SampleAfterValue": "20003",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Counts the number of machine clears due to a page fault.  Counts both I-Side and D-Side (Loads/Stores) page faults.  A page fault occurs when either the page is not present, or an access violation occurs.",
        "EventCode": "0xc3",
        "EventName": "MACHINE_CLEARS.PAGE_FAULT",
        "SampleAfterValue": "20003",
        "UMask": "0x20"
    },
    {
        "BriefDescription": "Counts the number of machine clears that flush the pipeline and restart the machine with the use of microcode due to SMC, MEMORY_ORDERING, FP_ASSISTS, PAGE_FAULT, DISAMBIGUATION, and FPC_VIRTUAL_TRAP.",
        "EventCode": "0xc3",
        "EventName": "MACHINE_CLEARS.SLOW",
        "SampleAfterValue": "20003",
        "UMask": "0x6f"
    },
    {
        "BriefDescription": "Counts the number of machine clears due to program modifying data (self modifying code) within 1K of a recently fetched code page.",
        "EventCode": "0xc3",
        "EventName": "MACHINE_CLEARS.SMC",
        "SampleAfterValue": "20003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of Last Branch Record (LBR) entries. Requires LBRs to be enabled and configured in IA32_LBR_CTL. [This event is alias to LBR_INSERTS.ANY]",
        "EventCode": "0xe4",
        "EventName": "MISC_RETIRED.LBR_INSERTS",
        "PEBS": "1",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of issue slots that were not consumed by the backend because allocation is stalled due to a mispredicted jump or a machine clear. [This event is alias to TOPDOWN_BAD_SPECULATION.ALL_P]",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.ALL",
        "PublicDescription": "Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a mispredicted jump or a machine clear. Only issue slots wasted due to fast nukes such as memory ordering nukes are counted. Other nukes are not accounted for. Counts all issue slots blocked during this recovery window, including relevant microcode flows, and while uops are not yet available in the instruction queue (IQ) or until an FE_BOUND event occurs besides OTHER and CISC. Also includes the issue slots that were consumed by the backend but were thrown away because they were younger than the mispredict or machine clear. [This event is alias to TOPDOWN_BAD_SPECULATION.ALL_P]",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of issue slots that were not consumed by the backend because allocation is stalled due to a mispredicted jump or a machine clear. [This event is alias to TOPDOWN_BAD_SPECULATION.ALL]",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.ALL_P",
        "PublicDescription": "Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a mispredicted jump or a machine clear. Only issue slots wasted due to fast nukes such as memory ordering nukes are counted. Other nukes are not accounted for. Counts all issue slots blocked during this recovery window, including relevant microcode flows, and while uops are not yet available in the instruction queue (IQ) or until an FE_BOUND event occurs besides OTHER and CISC. Also includes the issue slots that were consumed by the backend but were thrown away because they were younger than the mispredict or machine clear. [This event is alias to TOPDOWN_BAD_SPECULATION.ALL]",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to Fast Nukes such as  Memory Ordering Machine clears and MRN nukes",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.FASTNUKE",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a machine clear (nuke) of any kind including memory ordering and memory disambiguation.",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.MACHINE_CLEARS",
        "SampleAfterValue": "1000003",
        "UMask": "0x3"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to Branch Mispredict",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.MISPREDICT",
        "SampleAfterValue": "1000003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to a machine clear (nuke).",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.NUKE",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of retirement slots not consumed due to backend stalls [This event is alias to TOPDOWN_BE_BOUND.ALL_P]",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.ALL",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to due to certain allocation restrictions",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of retirement slots not consumed due to backend stalls [This event is alias to TOPDOWN_BE_BOUND.ALL]",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.ALL_P",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to memory reservation stall (scheduler not being able to accept another uop).  This could be caused by RSV full or load/store buffer block.",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.MEM_SCHEDULER",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to IEC and FPC RAT stalls - which can be due to the FIQ and IEC reservation station stall (integer, FP and SIMD scheduler not being able to accept another uop. )",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.NON_MEM_SCHEDULER",
        "SampleAfterValue": "1000003",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to mrbl stall.  A 'marble' refers to a physical register file entry, also known as the physical destination (PDST).",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.REGISTER",
        "SampleAfterValue": "1000003",
        "UMask": "0x20"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to ROB full",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.REORDER_BUFFER",
        "SampleAfterValue": "1000003",
        "UMask": "0x40"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to iq/jeu scoreboards or ms scb",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.SERIALIZATION",
        "SampleAfterValue": "1000003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Counts the number of retirement slots not consumed due to front end stalls [This event is alias to TOPDOWN_FE_BOUND.ALL_P]",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.ALL",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of retirement slots not consumed due to front end stalls [This event is alias to TOPDOWN_FE_BOUND.ALL]",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.ALL_P",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BAClear",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.BRANCH_DETECT",
        "SampleAfterValue": "1000003",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BTClear",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.BRANCH_RESTEER",
        "SampleAfterValue": "1000003",
        "UMask": "0x40"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to ms",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.CISC",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to decode stall",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.DECODE",
        "SampleAfterValue": "1000003",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to frontend bandwidth restrictions due to decode, predecode, cisc, and other limitations.",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.FRONTEND_BANDWIDTH",
        "SampleAfterValue": "1000003",
        "UMask": "0x8d"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to latency related stalls including BACLEARs, BTCLEARs, ITLB misses, and ICache misses.",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.FRONTEND_LATENCY",
        "SampleAfterValue": "1000003",
        "UMask": "0x72"
    },
    {
        "BriefDescription": "This event is deprecated. [This event is alias to TOPDOWN_FE_BOUND.ITLB_MISS]",
        "Deprecated": "1",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.ITLB",
        "SampleAfterValue": "1000003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to itlb miss [This event is alias to TOPDOWN_FE_BOUND.ITLB]",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.ITLB_MISS",
        "SampleAfterValue": "1000003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend that do not categorize into any other common frontend stall",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.OTHER",
        "SampleAfterValue": "1000003",
        "UMask": "0x80"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to predecode wrong",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.PREDECODE",
        "SampleAfterValue": "1000003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the number of consumed retirement slots.  Similar to UOPS_RETIRED.ALL [This event is alias to TOPDOWN_RETIRING.ALL_P]",
        "EventCode": "0x72",
        "EventName": "TOPDOWN_RETIRING.ALL",
        "PEBS": "1",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of consumed retirement slots.  Similar to UOPS_RETIRED.ALL [This event is alias to TOPDOWN_RETIRING.ALL]",
        "EventCode": "0x72",
        "EventName": "TOPDOWN_RETIRING.ALL_P",
        "PEBS": "1",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the number of uops issued by the front end every cycle.",
        "EventCode": "0x0e",
        "EventName": "UOPS_ISSUED.ANY",
        "PublicDescription": "Counts the number of uops issued by the front end every cycle. When 4-uops are requested and only 2-uops are delivered, the event counts 2.  Uops_issued correlates to the number of ROB entries.  If uop takes 2 ROB slots it counts as 2 uops_issued.",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the total number of uops retired.",
        "EventCode": "0xc2",
        "EventName": "UOPS_RETIRED.ALL",
        "PEBS": "1",
        "SampleAfterValue": "2000003"
    },
    {
        "BriefDescription": "Counts the number of integer divide uops retired.",
        "EventCode": "0xc2",
        "EventName": "UOPS_RETIRED.IDIV",
        "PEBS": "1",
        "SampleAfterValue": "2000003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Counts the number of uops that are from the complex flows issued by the micro-sequencer (MS).  This includes uops from flows due to complex instructions, faults, assists, and inserted flows.",
        "EventCode": "0xc2",
        "EventName": "UOPS_RETIRED.MS",
        "PEBS": "1",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of x87 uops retired, includes those in ms flows",
        "EventCode": "0xc2",
        "EventName": "UOPS_RETIRED.X87",
        "PEBS": "1",
        "SampleAfterValue": "2000003",
        "UMask": "0x2"
    }
]
