// SPDX-License-Identifier: GPL-2.0
// Test of slow start when not application-limited, so that
// the cwnd continues to grow.
// In this variant, the receiver ACKs every packet.

// Set up config. To keep things simple, disable the
// mechanism that defers sending in order to send bigger TSO packets.
`./defaults.sh
sysctl -q net.ipv4.tcp_tso_win_divisor=100`

    0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
   +0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
   +0 bind(3, ..., ...) = 0
   +0 listen(3, 1) = 0

  +.1 < S 0:0(0) win 32792 <mss 1000,sackOK,nop,nop,nop,wscale 7>
   +0 > S. 0:0(0) ack 1 <mss 1460,nop,nop,sackOK,nop,wscale 8>
  +.1 < . 1:1(0) ack 1 win 257
   +0 accept(3, ..., ...) = 4
   +0 setsockopt(4, SOL_SOCKET, SO_SNDBUF, [200000], 4) = 0

   +0 write(4, ..., 30000) = 30000
   +0 > P. 1:10001(10000) ack 1
   +0 %{ assert tcpi_snd_cwnd == 10, tcpi_snd_cwnd }%

+.105 < . 1:1(0) ack 1001 win 257
   +0 > P. 10001:12001(2000) ack 1

   +0 < . 1:1(0) ack 2001 win 257
   +0 > P. 12001:14001(2000) ack 1

+.005 < . 1:1(0) ack 3001 win 257
   +0 > P. 14001:16001(2000) ack 1

   +0 < . 1:1(0) ack 4001 win 257
   +0 > P. 16001:18001(2000) ack 1

+.005 < . 1:1(0) ack 5001 win 257
   +0 > P. 18001:20001(2000) ack 1

   +0 < . 1:1(0) ack 6001 win 257
   +0 > P. 20001:22001(2000) ack 1

+.005 < . 1:1(0) ack 7001 win 257
   +0 > P. 22001:24001(2000) ack 1

   +0 < . 1:1(0) ack 8001 win 257
   +0 > P. 24001:26001(2000) ack 1

+.005 < . 1:1(0) ack 9001 win 257
   +0 > P. 26001:28001(2000) ack 1

   +0 < . 1:1(0) ack 10001 win 257
   +0 > P. 28001:30001(2000) ack 1

   +0 %{ assert tcpi_snd_cwnd == 20, tcpi_snd_cwnd }%
